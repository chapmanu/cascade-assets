##
## helpers.velocity
## Master Version: Chapman.edu/_cascade/formats/helpers.velocity
##
## 
## IMAGE CHOOSER
## Outputs shared field 'image'
## USAGE: #bgColorChooser('next-steps-widget'). $bgColor will result in a class such as 'next-steps-widget--red'. 
#macro(image)
    #set ($imageType =
    $element.getChild($widgetXPath).getChild('image').getChild('imageType').value.toLowerCase())
    #set ($imageShape =
    $element.getChild($widgetXPath).getChild('image').getChild('imageShape').value.toLowerCase())
    #set ($imageUrlInt =
    $element.getChild($widgetXPath).getChild('image').getChild('imageUrlInt').getChild('path').value )
    #set ($imageUrlExt =
    $element.getChild($widgetXPath).getChild('image').getChild('imageUrlExt').getChild('path').value )
    #set ($altText =
    $element.getChild($widgetXPath).getChild('image').getChild('altText').value)
    #set ($objectPositionX = $element.getChild($widgetXPath).getChild('image').getChild('objectPositionX').value.toLowerCase())
    #set ($objectPositionY = $element.getChild($widgetXPath).getChild('image').getChild('objectPositionY').value.toLowerCase())

    #if (!$imageType.contains("none"))
        <div
            class="${_EscapeTool.xml($widgetXPath)}__img--${_EscapeTool.xml($imageShape)} ${_EscapeTool.xml($widgetXPath)}__img"
            style="width: ${_EscapeTool.xml($imgSize)}; height: ${_EscapeTool.xml($imgSize)}; ">
                <img class="${_EscapeTool.xml($widgetXPath)}__img img--${_EscapeTool.xml($imageShape)} "
                    src="[system-asset]${_EscapeTool.xml($imageUrlInt)}[/system-asset]"
                    alt="${_EscapeTool.xml($altText)}" title="${_EscapeTool.xml($altText)}" style="object-position:${_EscapeTool.xml($objectPositionX)} ${_EscapeTool.xml($objectPositionY)}"/>
        </div>
    #end
#end

## BACKGROUND COLOR CHOOSER
## Outputs shared field 'background-color'
## You just need to pass your respective top level path eg 'next-steps-widget'
## USAGE: #bgColorChooser('next-steps-widget'). $bgColor will result in a class such as 'next-steps-widget--red'. 
#macro(bgColorChooser $wxp)
    #set ($bgColor = $element.getChild($wxp).getChild('bgColor').value.toLowerCase())
    #set ($bgColor = $wxp + '--' + $bgColor)
#end

## 3 CTA BUTTONS
## Outputs shared field 'CTA' (https://dev-cascade.chapman.edu/entity/open.act?id=6ccc49b1c0a81e4b7fe96604d9f0dee2&type=sharedfield).
## EXAMPLE: #cta($element, 'next-steps-widget/link') ... see https://dev-cascade.chapman.edu/entity/open.act?id=866641d7c0a81e4b7fe96604393cd7cb&type=format
## EXAMPLE 2: Collection (slides) within a collection (slider): #wtf($slide 'link') ... see https://dev-cascade.chapman.edu/entity/open.act?id=11e3bb1ac0a81e4b7fe96604d894fc25&type=format
#macro(cta $elem $linkXPath $wxp)
    ## this will create 'next-steps-widget__button' down below
    #set ($bemButtonClass = $wxp + '__button')
    #set ($bemButtonClass = $bemButtonClass.value)
    
    #set ( $linkItems = $_XPathTool.selectNodes($elem, $linkXPath) )
    #foreach ($link in $linkItems)
        #set ($linkStyle = $link.getChild('linkStyle').value) 
        #set ($linkType =  $link.getChild('linkType').value)
        #set ($linkLabel = $link.getChild('label').value)
        
        ## ACCESSIBILITY
        #set ($ariaLabel = $link.getChild('accessibility').getChild('ariaLabel').value)
        #set ($title = $link.getChild('accessibility').getChild('title').value)

        ## ANALYTICS
        #set ($customID = $link.getChild('tracking').getChild('customID').value)
        #set ($dataAttr = $link.getChild('tracking').getChild('dataAttr').value)

        #if ($customID != '')
            #set ($customID = $link.getChild('customID').value)
        #else
            #set ( $customID = $linkLabel.replaceAll(" ", "-").replaceAll("[^a-zA-Z-]", "").replaceAll("--", "-").toLowerCase() )
        #end
        
        #if ($dataAttr != '')
            #set ($dataAttr = $link.getChild('dataAttr').value)
            #set ($dataAttr = $dataAttr)
        #else
            #set ($dataAttr = '')
        #end
            
        #if ($linkType == 'Internal Link')
            #set ($linkURL = $link.getChild('internalLink').getChild('path').value )
            #elseif ($linkType == 'External Link')
                #set ($linkURL = $link.getChild('externalLink').value )
        #else 
            #set ($linkURL = $link.getChild('fileLink').getChild('path').value )
        #end
    
        
   
        #if ($linkLabel != '')
            #if ($linkStyle == 'Text Link')
                <a tabindex="1" href="$linkURL" id="$customID" data-attribute="$dataAttr" aria-label="$ariaLabel" title="$title" class="text--link">#escape($linkLabel)</a>
            #elseif (($linkStyle == 'Button Link') && ($bemButtonClass != '$bemButtonClass'))
                <a tabindex="0" href="$linkURL" id="$customID" data-attribute="$dataAttr" aria-label="$ariaLabel" title="$title" class="button $bemButtonClass">#escape($linkLabel)</a>
            #else 
                <a tabindex="0" href="$linkURL" id="$customID" data-attribute="$dataAttr" aria-label="$ariaLabel" title="$title" class="button">#escape($linkLabel)</a>
            #end    
        #end
    #end
#end

## ## SIMPLIFIED ESCAPE TOOL 
#macro(escape $escapeOutput)
    ${_EscapeTool.xml($escapeOutput)}
#end


## Log velocity variables in the browser console on dev
#macro(log $v)
  <script>
      <![CDATA[#protect
          if(window.location.href.indexOf("//dev-") > -1) {          
            console.log("(ง •̀_•́)ง VELOCITY: $v")
          }
      #protect]]>
  </script>
#end

#macro ( buildDrillDownList $asset )
  #set ( $drillDownPagePath = $currentPage.path )
  #if ( $drillDownPagePath == $asset.path ) 
    #set( $isCurrentDrillDownPage = "drill-down-list-item current" )
  #else
    #set( $isCurrentDrillDownPage = "drill-down-list-item")
  #end
  #set ( $isVisible = $asset.metadata.getDynamicField('Hide from navigation').value != "Yes")
  #if ($asset.assetType == "folder" && $isVisible)
    #set ( $visibleChildren = false )
    #foreach( $childAsset in $asset.children )
      #if ($visibleChildren == false)
        #if ( $childAsset.assetType == 'symlink' )
          #set ( $visibleChildren = true ) 
        #end
        #if ( $childAsset.assetType == 'page' )
          #set ( $visibleChildren = $childAsset.metadata.getDynamicField('Hide from navigation').value != "Yes" )
        #end
        #if ( $childAsset.assetType == 'folder')
          #foreach ($childAsset in $childAsset.children)
            #if ( $visibleChildren != true )
              #set ( $visibleChildren = $childAsset.metadata.getDynamicField('Hide from navigation').value != "Yes" )
            #end
          #end
        #end
      #end
    #end
    #if ($visibleChildren)
      <li class="${isCurrentDrillDownPage}">
        <span class="drill-down-parent">${_EscapeTool.xml($asset.metadata.displayName)}</span>
        <span class="toggle-drilldown"><i class="fas fa-chevron-right"></i></span>
        <ul class="drilldown-menu">
          <li class="menu-back"><i class="fas fa-chevron-left"></i>${_EscapeTool.xml($asset.label)} - Menu</li>
          #foreach( $childAsset in $asset.children)
            #if ( $drillDownPagePath == $childAsset.path ) 
              #set( $isCurrentDrillDownPage = "drill-down-list-item current" )
            #else
              #set( $isCurrentDrillDownPage = "drill-down-list-item")
            #end
            #set ( $isVisible = $childAsset.metadata.getDynamicField('Hide from navigation').value != "Yes")
            #if ($childAsset.assetType == 'page' && $isVisible)
              <li class="${isCurrentDrillDownPage}"><a href="site://Chapman.edu/${childAsset.path}">${_EscapeTool.xml($childAsset.metadata.displayName)}</a></li>
            #elseif ($childAsset.assetType == 'symlink')
              <li class="${isCurrentDrillDownPage}"><a href="site://Chapman.edu/${childAsset.path}">${_EscapeTool.xml($childAsset.label)} <span class="fas fa-external-link-alt"></span></a></li>
            #elseif ($childAsset.assetType == 'folder' && $isVisible)
              #buildDrillDownList($childAsset)
            #end
          #end
        </ul>
      </li>
    #end
  #elseif ($asset.assetType == 'page' && $isVisible)
    <li class="${isCurrentDrillDownPage}"><a href="site://Chapman.edu/${asset.path}">${_EscapeTool.xml($asset.metadata.displayName)}</a></li>
  #elseif ($asset.assetType == 'symlink')
    <li class="${isCurrentDrillDownPage}"><a href="site://Chapman.edu/${asset.path}">${_EscapeTool.xml($asset.label)} <span class="fas fa-external-link-alt"></span></a></li>
  #end
#end

#macro(addBackgroundImage $content)
    #set ($linkUrl = $content.getChild('fileLink').getChild('path').value)
    #if ($linkUrl != '')
        "background-image: url('[system-asset]${linkUrl}[/system-asset]')"
    #else
        ""
    #end
#end

#macro(alert $v)
  <script>
      <![CDATA[#protect
          if(window.location.href.indexOf("//dev-") > -1) {          
            alert("(ง •̀_•́)ง VELOCITY: $v")
          }
      #protect]]>
  </script>
#end
## Determine image filetype
#macro(determineImageType $urlAsString)
    #if ($urlAsString.toString().contains("jpg"))
        #set ( $imageFileType = ".jpg")
            ## $imageFileType
        #elseif ($urlAsString.toString().contains("jpeg"))
            #set ( $imageFileType = ".jpeg")
            ## $imageFileType
        #elseif ($urlAsString.toString().contains("png"))
            #set ( $imageFileType = ".png")
            ## $imageFileType
    #end
#end

#macro(getFileLink $content)
    #set ($linkUrl = $content.getChild('fileLink').getChild('path').value)
    #if ($linkUrl != '')
        "[system-asset]${linkUrl}[/system-asset]"
    #else
        ""
    #end
#end

#macro(cascadeBgImage $content)
    #set ($fileLink = $content.getChild("fileLink").getChild('path').asset)
    #if (!$_PropertyTool.isNull($fileLink))
        "background-image: url('[system-asset]${fileLink.path}[/system-asset]')"
    #else
        ""
    #end
#end
##
## Pass a specificly strucutred xml node to this macro and ouput a url.
##
## The XML passed in as the $link variable must be structured like this:
##
## <link>
##   <linkType>Internal Link</linkType>
##
##   <externalLink>http://link.goes/here</externalLink>
##
##   <internalLink>
##     <path>/link/goes/here</path>
##   </internalLink>
##
##   <fileLink>
##     <path>/link/goes/here</path>
##   </fileLink>
## </link>
##
#macro( outputUrl $link )
    #set ($linkType = $link.getChild('linkType').value)
    #if ($linkType == 'Internal Link')
        #set ($linkUrl = "${link.getChild('internalLink').getChild('path').value}")
    #elseif ($linkType == 'File Link')
        #set ($linkUrl = "${link.getChild('fileLink').getChild('path').value}")
    #elseif ($linkType == 'External Link')
        #set ($linkUrl = $link.getChild('externalLink').value)
    #else
        #set ($linkUrl = '')
    #end
    ${_EscapeTool.xml(${linkUrl})}
#end

#macro( outputHref $link )
    #set ($linkType = $link.getChild('linkType').value)
    #if ($linkType == 'Internal Link')
        #set ($linkUrl = "${link.getChild('internalLink').getChild('path').value}")
    #elseif ($linkType == 'File Link')
        #set ($linkUrl = "${link.getChild('fileLink').getChild('path').value}")
    #elseif ($linkType == 'External Link')
        #set ($linkUrl = $link.getChild('externalLink').value)
    #else
        #set ($linkUrl = '')
    #end
    href="${_EscapeTool.xml(${linkUrl})}"
#end

#macro( outputSrc $link )
    #set ($linkUrl = $link.getChild('fileLink').getChild('path').value)
    #if ($linkUrl != '')
        src="[system-asset]${_EscapeTool.xml($linkUrl)}[/system-asset]"
    #end
#end

##
## Pass any XML node into this element to see the structure printed to the page.
##
#macro( inspectXML $single_xml_node )
    <pre>${_EscapeTool.xml($_SerializerTool.serialize($single_xml_node, false))}</pre>
#end

## Pass a specificly strucutred xml node to this macro and ouput a social icon list element.
##
## The XML passed in as the $content variable must be structured like this:
##
## <social-media-link>
##    <social-media-type>Selected social media type here</social-media-type>
##    <link>/link/goes/here</link>
## </social-media-link>
#macro(outputSocialIcon $content)
    #set ($type = $content.getChild('social-media-type').value)
    #set ($link = $content.getChild('link').value)

    #set ($iconClasses = {
        "Facebook"   : "icon-facebook",
        "GooglePlus" : "icon-google-plus",
        "iTunes U"   : "icon-graduation2",
        "Instagram"  : "icon-instagram",
        "LinkedIn"   : "icon-linkedin2",
        "Pinterest"  : "icon-pinterest",
        "Twitter"    : "icon-twitter",
        "WordPress"  : "icon-newspaper",
        "YouTube"    : "icon-youtube"
    })

    #set ($iconTitleText = {
        "Facebook"   : "Follow Us On Facebook",
        "GooglePlus" : "Follow Us On GooglePlus",
        "iTunes U"   : "Follow Us On iTunes U",
        "Instagram"  : "Follow Us On Instagram",
        "LinkedIn"   : "Follow Us On LinkedIn",
        "Pinterest"  : "Follow Us On Pinterest",
        "Twitter"    : "Follow Us On Twitter",
        "WordPress"  : "Follow Us On WordPress",
        "YouTube"    : "Follow Us On YouTube"
    })

    #if($iconClasses.get($type))
        #set($icon = $iconClasses.get($type))
        #set($iconTitleText = $iconTitleText.get($type))
        <li>
          <a class="social-link $icon" href="$link">
            <span class="sr-only">$iconTitleText</span>
          </a>
        </li>
    #end
#end

#macro(outputBgColorClass $element $widgetClass)
    #set($bgColor = $element.getChild('bgColor').value)
    #set($colorClass = "${widgetClass}__#if($bgColor == 'Light')light-bg#{elseif}($bgColor == 'Medium')medium-bg#{else}dark-bg#end")
    $colorClass
#end

## Pass a certain XML structure into this macro, and get a string that looks
## like "background-image: url('https://mycoolimage.com/file1.png')
##
## Useage: <div style=#addBackgroundImage($content) >
##
## The xml in the $content variable passed in must look like the following:
## <media>
##     <fileLink>
##         <path>/_files/image1.png</path>
##     </fileLink>
## </media>
