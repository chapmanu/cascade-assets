#*
--------------------------------------------------------------------------------
helpers.velocity
Master Version: Chapman.edu/_cascade/formats/helpers.velocity
--------------------------------------------------------------------------------
*#

#*
--------------------------------------------------------------------------------
 Converts camelCase to SNAKE_CASE
 USAGE: #camelToSnake( $var )
--------------------------------------------------------------------------------
*#

#macro(camelToSnake $camelCase)
    #set( $regex = "([a-z])([A-Z]+)")
    #set( $replacement = "$1-$2")
    #set( $snakeCase = $camelCase.replaceAll($regex, $replacement).toLowerCase())
    
    ## set widget value to this-widget for BEM conventions
    ## example: this-widget--red 
    #set ( $widgetXPath = $snakeCase)
    ## $wxp is just an acronym for $widgetXPath
    #set ( $wxp = $snakeCase)
#end

#*
--------------------------------------------------------------------------------
 OUTPUTS IMAGES IN A COLLECTION (AN IMAGE WITHIN A SLIDE IN A SERIES OF SLIDES)
 USAGE: #imageInCollection( $slide )
--------------------------------------------------------------------------------
*#
#macro(imageInCollection $elem)
     #set ($imageType = $elem.getChild('image').getChild('imageType').value.toLowerCase())
    #set ($imageShape =
    $elem.getChild('image').getChild('imageShape').value.toLowerCase())
    #set ($imageUrlInt =
    $elem.getChild('image').getChild('imageUrlInt').getChild('path').value )
    #set ($imageUrlExt =
    $elem.getChild('image').getChild('imageUrlExt').getChild('path').value )
    #set ($altText =
    $elem.getChild('image').getChild('altText').value)

    #set ( $imageRoleVal =  ( $elem.getChild('image').getChild('imageAltOrDecorative').value ) )
    #if ( $imageRoleVal == "Decorative Image" )
        #set ( $imageRole = "role='presentation'" )
        #set ( $altText = '' )
      #else 
        #set ( $imageRole = "" )
      #end
      #log($imageRole)

    #set ($objectPositionX = $elem.getChild('image').getChild('objectPositionX').value.toLowerCase())
    #set ($objectPositionY = $elem.getChild('image').getChild('objectPositionY').value.toLowerCase())
    
    #if (!$imageType.contains("none"))
        <div
            class="${_EscapeTool.xml($widgetXPath)}__img--${_EscapeTool.xml($imageShape)} ${_EscapeTool.xml($widgetXPath)}__img"
            style="width: ${_EscapeTool.xml($imgSize)}; height: ${_EscapeTool.xml($imgSize)}; ">
                <img $imageRole class="${_EscapeTool.xml($widgetXPath)}__img img--${_EscapeTool.xml($imageShape)} "
                    src="[system-asset]${_EscapeTool.xml($imageUrlInt)}[/system-asset]"
                    alt="${_EscapeTool.xml($altText)}" title="${_EscapeTool.xml($altText)}" style="object-position:${_EscapeTool.xml($objectPositionX)} ${_EscapeTool.xml($objectPositionY)}"/>
        </div>
    #end
#end

#*
--------------------------------------------------------------------------------
IMAGE CHOOSER
USAGE: #image()
--------------------------------------------------------------------------------
*#

#macro(image)
    ## $widgetXPath is just a verbose alias for $wxp 
    #set ($imageType =
    $element.getChild($widgetXPath).getChild('image').getChild('imageType').value.toLowerCase())
    #set ($imageShape =
    $element.getChild($widgetXPath).getChild('image').getChild('imageShape').value.toLowerCase())
    #set ($imageUrlInt =
    $element.getChild($widgetXPath).getChild('image').getChild('imageUrlInt').getChild('path').value )
    #set ($imageUrlExt =
    $element.getChild($widgetXPath).getChild('image').getChild('imageUrlExt').getChild('path').value )
    #set ($altText =
    $element.getChild($widgetXPath).getChild('image').getChild('altText').value)
    #set ($objectPositionX = $element.getChild($widgetXPath).getChild('image').getChild('objectPositionX').value.toLowerCase())
    #set ($objectPositionY = $element.getChild($widgetXPath).getChild('image').getChild('objectPositionY').value.toLowerCase())

    #if (!$imageType.contains("none"))
        <div
            class="${_EscapeTool.xml($widgetXPath)}__img--${_EscapeTool.xml($imageShape)} ${_EscapeTool.xml($widgetXPath)}__img"
            style="width: ${_EscapeTool.xml($imgSize)}; height: ${_EscapeTool.xml($imgSize)}; ">
                <img class="${_EscapeTool.xml($widgetXPath)}__img img--${_EscapeTool.xml($imageShape)} "
                    src="[system-asset]${_EscapeTool.xml($imageUrlInt)}[/system-asset]"
                    alt="${_EscapeTool.xml($altText)}" title="${_EscapeTool.xml($altText)}" style="object-position:${_EscapeTool.xml($objectPositionX)} ${_EscapeTool.xml($objectPositionY)}"/>
        </div>
    #end
#end

#*
--------------------------------------------------------------------------------
BACKGROUND COLOR CHOOSER
Outputs shared field 'background-color'
You just need to pass your respective top level path eg 'next-steps-widget'
USAGE: #bgColorChooser('next-steps-widget'). $bgColor will result in a class such as 'next-steps-widget--red'. 
--------------------------------------------------------------------------------
*#

#macro(bgColorChooser $wxp)
    #set ($bgColor = $element.getChild($wxp).getChild('bgColor').value.toLowerCase())
    #camelToSnake($wxp)
    #set ($bgColor = $wxp + '--' + $bgColor)
#end

#*
--------------------------------------------------------------------------------
BACKGROUND COLOR CHOOSER FOR ITEMS IN A LOOP (IN A COLLECTION)
Outputs shared field 'background-color' for items in a loop.
You just need to pass your respective top level path eg 'next-steps-widget'
USAGE: #bgColorChooser('next-steps-widget'). $bgColor will result in a class such as 'next-steps-widget--red'. 
--------------------------------------------------------------------------------
*#

#macro(bgColorChooserLoop $itemInLoop)
    #set ($bgColor = $itemInLoop.getChild('bgColor').value.toLowerCase())
    #set ($bgColor = $widgetXPath + '--' + $bgColor)
#end

#*
#*
--------------------------------------------------------------------------------
3 CTA BUTTONS
Outputs shared field 'CTA' (https://dev-cascade.chapman.edu/entity/open.act?id=6ccc49b1c0a81e4b7fe96604d9f0dee2&type=sharedfield).
EXAMPLE: #cta($element, 'next-steps-widget/link') ... see https://dev-cascade.chapman.edu/entity/open.act?id=866641d7c0a81e4b7fe96604393cd7cb&type=format
EXAMPLE 2: Collection (slides) within a collection (slider): #wtf($slide 'link') ... see https://dev-cascade.chapman.edu/entity/open.act?id=11e3bb1ac0a81e4b7fe96604d894fc25&type=format
--------------------------------------------------------------------------------
*#
#macro(cta $elem $linkXPath $wxp)
    ## this will create 'next-steps-widget__button' down below
    #set ($bemButtonClass = $wxp + '__button')
    #set ($bemButtonClass = $bemButtonClass.value)
    
    #set ( $linkItems = $_XPathTool.selectNodes($elem, $linkXPath) )
    #foreach ($link in $linkItems)
        #set ($linkStyle = $link.getChild('linkStyle').value) 
        #set ($linkType =  $link.getChild('linkType').value)
        #set ($linkLabel = $link.getChild('label').value)
        
        ## ACCESSIBILITY
        #set ($ariaLabel = $link.getChild('accessibility').getChild('ariaLabel').value)
        #set ($title = $link.getChild('accessibility').getChild('title').value)

        ## ANALYTICS
        #set ($customID = $link.getChild('tracking').getChild('customID').value)
        #set ($dataAttr = $link.getChild('tracking').getChild('dataAttr').value)

        #if ($customID != '')
            #set ($customID = $link.getChild('customID').value)
        #else
            #set ( $customID = $linkLabel.replaceAll(" ", "-").replaceAll("[^a-zA-Z-]", "").replaceAll("--", "-").toLowerCase() )
        #end
        
        #if ($dataAttr != '')
            #set ($dataAttr = $link.getChild('dataAttr').value)
            #set ($dataAttr = $dataAttr)
        #else
            #set ($dataAttr = '')
        #end
            
        #if ($linkType == 'Internal Link')
            #set ($linkURL = $link.getChild('internalLink').getChild('path').value )
            #elseif ($linkType == 'External Link')
                #set ($linkURL = $link.getChild('externalLink').value )
        #else 
            #set ($linkURL = $link.getChild('fileLink').getChild('path').value )
        #end
    
        
   
        #if ($linkLabel != '')
            #if ($linkStyle == 'Text Link')
                <a tabindex="1" href="$linkURL" id="$customID" data-attribute="$dataAttr" aria-label="$ariaLabel" title="$title" class="text--link">#escape($linkLabel)</a>
            #elseif (($linkStyle == 'Button Link') && ($bemButtonClass != '$bemButtonClass'))
                <a tabindex="0" href="$linkURL" id="$customID" data-attribute="$dataAttr" aria-label="$ariaLabel" title="$title" class="button $bemButtonClass">#escape($linkLabel)</a>
            #else 
                <a tabindex="0" href="$linkURL" id="$customID" data-attribute="$dataAttr" aria-label="$ariaLabel" title="$title" class="button">#escape($linkLabel)</a>
            #end    
        #end
    #end
#end

#*
--------------------------------------------------------------------------------
SIMPLIFIED ESCAPE TOOL 
USAGE: #escape($variable)
--------------------------------------------------------------------------------
*#

#macro(escape $escapeOutput)
    ${_EscapeTool.xml($escapeOutput)}
#end


#*
--------------------------------------------------------------------------------
LOG VELOCITY VARIABLES IN THE BROWSER CONSOLE ON DEV
--------------------------------------------------------------------------------
*#

#macro(log $v)
  <script>
      <![CDATA[#protect
          if(window.location.href.indexOf("//dev-") > -1) {          
            console.log("(ง •̀_•́)ง VELOCITY: $v")
          }
      #protect]]>
  </script>
#end


#*
--------------------------------------------------------------------------------
LOG VELOCITY VARIABLES IN THE BROWSER CONSOLE ON DEV
--------------------------------------------------------------------------------
*#

#macro ( buildDrillDownList $asset, $noSibling )
  #set ( $drillDownPagePath     = $currentPage.path )
  #set ( $isVisible             = $asset.metadata.getDynamicField('Hide from navigation').value != "Yes")
  #set ( $rootPageName          = $asset.path.replaceAll("^[\w]+\/|^[\w]+-[\w]+\/", "") )
  #set ( $assetInCurrentPath    = $_StringTool.substringAfter($drillDownPagePath, $asset.path).length() )
  #set ( $visibleChildrenCount  = 0 )
  #set ( $visibleSiblingCount   = 0 )
  
  #if ( $drillDownPagePath == $asset.path ) 
    #set ( $isVisible = true )
    #set ( $isCurrentDrillDownPage = "drill-down-list-item current" )
  #else
    #set( $isCurrentDrillDownPage = "drill-down-list-item")
  #end
  
  ## setting the asset to visible regardless if its hidden in order to properly display drilldown paths parents
  #if ( $assetInCurrentPath > 0 )
    #set ( $isVisible = true )
  #end

  #if ($asset.assetType == "folder" && $isVisible)
    #if ($asset.metadata.displayName != '_files')
      #set ( $visibleChildren = false )
      #foreach( $childAsset in $asset.children )
        #if ($visibleChildren == false || $visibleChildrenCount < 2 || $visibleSiblingCount < 1)
          #if ( $childAsset.assetType == 'symlink' )
            #set ( $visibleChildren = true ) 
            #set ( $visibleChildren = $visibleChildren + 1 )
          #end
          #if ( $childAsset.assetType == 'page' )
            #set ( $visibleChild =  $childAsset.metadata.getDynamicField('Hide from navigation').value != "Yes" )
            #if ($visibleChild)
              #set ( $visibleChildren =  $visibleChild )
              #set ( $visibleChildrenCount = $visibleChildrenCount + 1 )
            #end
          #end
          #if ( $assetInCurrentPath > 0 )
            #set ( $hiddenAsset = $childAsset.metadata.getDynamicField('Hide from navigation').value == "Yes" )
            #if ($hiddenAsset && $childAsset.path == $drillDownPagePath)
              #set ( $visibleChildrenCount = $visibleChildrenCount + 1 )
            #elseif ($hiddenAsset && $childAsset.path == $drillDownPagePath.replace('/index', ''))
              #set ( $visibleChildrenCount = $visibleChildrenCount + 1 )
            #end
          #end
          #if ( $childAsset.assetType == 'folder')
            #set ( $visibleSubFolder = $childAsset.metadata.getDynamicField('Hide from navigation').value != "Yes" )
            #if (($visibleSubFolder && $childAsset.metadata.displayName != '_files') || $assetInCurrentPath > 0)
              #foreach ($lowerChildAsset in $childAsset.children)
                #if ( $visibleChildren == false || $visibleChildrenCount < 2)
                  #set ( $visibleSubChildren = $lowerChildAsset.metadata.getDynamicField('Hide from navigation').value != "Yes" )
                  #if ($visibleSubChildren) 
                    #set ( $visibleChildren =  $visibleSubChildren )
                    #set ( $visibleChildrenCount = $visibleChildrenCount + 1)
                  #end
                  
                  #if (!$visibleSubChildren && $lowerChildAsset.path == $drillDownPagePath)
                    #set ( $visibleChildren =  true )
                    #set ( $visibleChildrenCount = $visibleChildrenCount + 1)                  
                  #end
                #end
              #end
            #end
          #end
        #end
      #end
    #end
    #if ($visibleChildren && $visibleChildrenCount > 1 || ($assetInCurrentPath > 1 && $visibleChildrenCount > 1))
      <li class="${isCurrentDrillDownPage}" role="group" >
        #set ( $ariaLabel = $asset.metadata.displayName.replaceAll(" ", "-").toLowerCase())
        <span tabindex="0" aria-label="${_EscapeTool.xml($ariaLabel)}" class="drill-down-parent">${_EscapeTool.xml($asset.metadata.displayName)}</span>
        <span class="toggle-drilldown"><span class="fas fa-chevron-right"></span></span>
        <ul class="drilldown-menu" aria-expanded="false">
          <li tabindex="0" class="menu-back"><span class="fas fa-chevron-left"></span>Back</li>
          #foreach( $childAsset in $asset.children)
            #set ( $isVisible = $childAsset.metadata.getDynamicField('Hide from navigation').value != "Yes")
            #if ( $drillDownPagePath == $childAsset.path ) 
              #set ( $isVisible = true )
              #set( $isCurrentDrillDownPage = "drill-down-list-item current" )
            #else
              #set( $isCurrentDrillDownPage = "drill-down-list-item")
            #end
            #set ( $currentPageInHiddenFolder = $_StringTool.substringAfter($drillDownPagePath, $childAsset.path).length() )
            
            #if ( $currentPageInHiddenFolder > 0 )
              #set ( $isVisible = true )
            #end
            
            #if ($childAsset.assetType == 'page' && $isVisible)
              <li class="${isCurrentDrillDownPage}"><a href="site://Chapman.edu/${childAsset.path}">${_EscapeTool.xml($childAsset.metadata.displayName)}</a></li>
            #elseif ($childAsset.assetType == 'symlink')
              <li class="${isCurrentDrillDownPage}"><a href="site://Chapman.edu/${childAsset.path}">${_EscapeTool.xml($childAsset.label)}
              <span class="fas fa-external-link-alt"></span></a></li>
            #elseif ($childAsset.assetType == 'folder' && $isVisible && $childAsset.metadata.displayName != '_files')
              #buildDrillDownList($childAsset)
            #end
          #end
        </ul>
      </li>
    #elseif (($visibleChildren && $visibleChildrenCount == 1) || $assetInCurrentPath > 1)
      #if ( $drillDownPagePath == $asset.path || $drillDownPagePath == $asset.path + "/index" )
        #set ( $isVisible = true )
        #set( $isCurrentDrillDownPage = "drill-down-list-item current" )
      #else
        #set( $isCurrentDrillDownPage = "drill-down-list-item")
      #end
      <li class="${isCurrentDrillDownPage}">
        <a href="site://Chapman.edu/${asset.path}">${_EscapeTool.xml($asset.metadata.displayName)}</a>
      </li>
    #end
  #elseif ($asset.assetType == 'page' && $isVisible)
    #if ($rootPageName == "index")
        <li class="${isCurrentDrillDownPage} home-menu">
            <span class="fas fa-home"></span>
            <a href="site://Chapman.edu/${asset.path}">${_EscapeTool.xml($asset.metadata.displayName)}</a>
        </li>
    #else
        <li class="${isCurrentDrillDownPage}">
            <a href="site://Chapman.edu/${asset.path}">${_EscapeTool.xml($asset.metadata.displayName)}</a>
        </li>
    #end
  #elseif ($asset.assetType == 'symlink')
    <li class="${isCurrentDrillDownPage}"><a href="site://Chapman.edu/${asset.path}">${_EscapeTool.xml($asset.label)} <span class="fas fa-external-link-alt"></span></a></li>
  #end
#end

#macro(alert $v)
  <script>
      <![CDATA[#protect
          if(window.location.href.indexOf("//dev-") > -1) {          
            alert("(ง •̀_•́)ง VELOCITY: $v")
          }
      #protect]]>
  </script>
#end
## Determine image filetype
#macro(determineImageType $urlAsString)
    #if ($urlAsString.toString().contains("jpg"))
        #set ( $imageFileType = ".jpg")
            ## $imageFileType
        #elseif ($urlAsString.toString().contains("jpeg"))
            #set ( $imageFileType = ".jpeg")
            ## $imageFileType
        #elseif ($urlAsString.toString().contains("png"))
            #set ( $imageFileType = ".png")
            ## $imageFileType
    #end
#end

#macro(getFileLink $content)
    #set ($linkUrl = $content.getChild('fileLink').getChild('path').value)
    #if ($linkUrl != '')
        "[system-asset]${linkUrl}[/system-asset]"
    #else
        ""
    #end
#end

#macro(cascadeBgImage $content)
    #set ($fileLink = $content.getChild("fileLink").getChild('path').asset)
    #if (!$_PropertyTool.isNull($fileLink))
        "background-image: url('[system-asset]${fileLink.path}[/system-asset]')"
    #else
        ""
    #end
#end
##
## Pass a specificly strucutred xml node to this macro and ouput a url.
##
## The XML passed in as the $link variable must be structured like this:
##
## <link>
##   <linkType>Internal Link</linkType>
##
##   <externalLink>http://link.goes/here</externalLink>
##
##   <internalLink>
##     <path>/link/goes/here</path>
##   </internalLink>
##
##   <fileLink>
##     <path>/link/goes/here</path>
##   </fileLink>
## </link>
##
#macro( outputUrl $link )
    #set ($linkType = $link.getChild('linkType').value)
    #if ($linkType == 'Internal Link')
        #set ($linkUrl = "${link.getChild('internalLink').getChild('path').value}")
    #elseif ($linkType == 'File Link')
        #set ($linkUrl = "${link.getChild('fileLink').getChild('path').value}")
    #elseif ($linkType == 'External Link')
        #set ($linkUrl = $link.getChild('externalLink').value)
    #else
        #set ($linkUrl = '')
    #end
    ${_EscapeTool.xml(${linkUrl})}
#end

#macro( outputHref $link )
    #set ($linkType = $link.getChild('linkType').value)
    #if ($linkType == 'Internal Link')
        #set ($linkUrl = "${link.getChild('internalLink').getChild('path').value}")
    #elseif ($linkType == 'File Link')
        #set ($linkUrl = "${link.getChild('fileLink').getChild('path').value}")
    #elseif ($linkType == 'External Link')
        #set ($linkUrl = $link.getChild('externalLink').value)
    #else
        #set ($linkUrl = '')
    #end
    href="${_EscapeTool.xml(${linkUrl})}"
#end

#macro( outputSrc $link )
    #set ($linkUrl = $link.getChild('fileLink').getChild('path').value)
    #if ($linkUrl != '')
        src="[system-asset]${_EscapeTool.xml($linkUrl)}[/system-asset]"
    #end
#end

##
## Pass any XML node into this element to see the structure printed to the page.
##
#macro( inspectXML $single_xml_node )
    <pre>${_EscapeTool.xml($_SerializerTool.serialize($single_xml_node, false))}</pre>
#end

## Pass a specificly strucutred xml node to this macro and ouput a social icon list element.
##
## The XML passed in as the $content variable must be structured like this:
##
## <social-media-link>
##    <social-media-type>Selected social media type here</social-media-type>
##    <link>/link/goes/here</link>
## </social-media-link>
#macro(outputSocialIcon $content)
    #set ($type = $content.getChild('social-media-type').value)
    #set ($link = $content.getChild('link').value)

    #set ($iconClasses = {
        "Facebook"   : "icon-facebook",
        "GooglePlus" : "icon-google-plus",
        "iTunes U"   : "icon-graduation2",
        "Instagram"  : "icon-instagram",
        "LinkedIn"   : "icon-linkedin2",
        "Pinterest"  : "icon-pinterest",
        "Twitter"    : "icon-twitter",
        "WordPress"  : "icon-newspaper",
        "YouTube"    : "icon-youtube"
    })

    #set ($iconTitleText = {
        "Facebook"   : "Follow Us On Facebook",
        "GooglePlus" : "Follow Us On GooglePlus",
        "iTunes U"   : "Follow Us On iTunes U",
        "Instagram"  : "Follow Us On Instagram",
        "LinkedIn"   : "Follow Us On LinkedIn",
        "Pinterest"  : "Follow Us On Pinterest",
        "Twitter"    : "Follow Us On Twitter",
        "WordPress"  : "Follow Us On WordPress",
        "YouTube"    : "Follow Us On YouTube"
    })

    #if($iconClasses.get($type))
        #set($icon = $iconClasses.get($type))
        #set($iconTitleText = $iconTitleText.get($type))
        <li>
          <a class="social-link $icon" href="$link">
            <span class="sr-only">$iconTitleText</span>
          </a>
        </li>
    #end
#end

#macro(outputBgColorClass $element $widgetClass)
    #set($bgColor = $element.getChild('bgColor').value)
    #set($colorClass = "${widgetClass}__#if($bgColor == 'Light')light-bg#{elseif}($bgColor == 'Medium')medium-bg#{else}dark-bg#end")
    $colorClass
#end
