#import( "/_cascade/formats/helpers.velocity" )
#macro(outputMastheadHero $element)  
    ## Variables
    #set ( $header            = $element.getChild('header') )
    #set ( $mobileLogoFields  = $header.getChild('mobileLogoFields') )
    #set ( $desktopLogoFields = $header.getChild('desktopLogoFields') )
    #set ( $headerText        = $header.getChild('headerText') )
    
    #set ( $hero            = $element.getChild('hero') )
    #set ( $backgroundImage = $hero.getChild('backgroundImage') )
    #set ( $heroTitle       = $hero.getChild('title').value )
    #set ( $heroSubtitle    = $hero.getChild('subtitle').value )
    
    #set ( $form      = $element.getChild('form') )
    #set ( $formTitle = $form.getChild('title').value )
    #set ( $formId    = $form.getChild('formId').value )
    #set ( $pagePath = $currentPage.path )
    
    ## nick
    <style>
        #output-debug h1,h2,h3,h4,h5,h6, ul, li, a {
            font-family: monospace !important;
            font-size: 12px !important;
            padding-left: 12px;
        }
        #output-debug {
            /*display: none !important;*/
            background-color: #000;
            color: #33FF00;
            font-family: monospace !important;
            font-size: 12px;
            width:100%;
            padding: 12px;
        }
        button {
            display: block;
        }
    </style>
    <script>
    function debugNewWindow(hideDebug){
        var divText = document.getElementById("output-debug").outerHTML;
        var myWindow = window.open('','','width=800,height=500');
        var doc = myWindow.document;
        doc.open();
        doc.write(divText);
        doc.close();
    }
    function hideDebug(){
        $('#output-debug').addClass("hidden")
    }
    
    </script>
    <div id="output-debug">
        
        <button onclick="debugNewWindow(hideDebug())">open in new window</button>
        <button onclick="hideDebug()">hide debug output</button>

        #if ( $pagePath.contains('sprint-02-27-2019'))
            <h1>sprint-02-27-2019</h1>
        #end

    #if (! $pagePath.contains('sprint-02-27-2019'))
        $currentPage.parentFolderIdentifier.type
        $currentPage 
        #set ( $currentFolder = $_.locateFolder($currentPage.parentFolderIdentifier.path.pathAsString ))
        $currentFolder
        #set ( $backgroundImageMobile = $hero.getChild('backgroundImageMobile') )
        #set ( $backgroundImageDesktop = $hero.getChild('backgroundImageDesktop') )
    
        <ul>
            <br/>
            #set ($string = "#getFileLink($backgroundImageDesktop)")
            <h1>the string: </h1> $string 
            <br/>
            linkUrl.parentfolder: $linkUrl.parentFolder
            <br/>
            <h1>splitting</h1>
            #foreach ($element in $linkUrl.split("/"))
              $element
            #end
            
             #set ($string = $linkUrl)
            #set ($index = $string.indexOf('\.'))
            #set ($output = $string.split('/')) 
            #set ($withADot = $output[$index])
            <br/>
            with a dot: $withADot
            #set ($noDot = $withADot.replace(".jpg", "") )
            <br/>
            without a dot: $noDot
            #set ($sevenSixtyEight = "-768")
            #set ($noDotWildcard = "$noDot$sevenSixtyEight")
            noDotWildcard: $noDotWildcard
            noDotWildcard as string?: "$noDotWildcard"
            
            <br/>
            linkurl: $linkUrl
            <br/>
          
            <br/>
            #set( $tinyImage = $linkUrl.replace(".jpg", "-1x1.") )
            ## #set( $tinyImage = $linkUrl.replace(".jpeg", "-1x1.") )
            ## #set( $tinyImage = $linkUrl.replace(".png", "-1x1.") )
            
            <br/>
            tinyImage: $tinyImage
            <br/>
            #set ( $parentDir = $currentPage.parentFolder )
            currentpage: $currentPage
            <br/>
            string: $string
            <br/>
            #set ($index = $string.indexOf('.jpg'))
            <br/>
            index of ".jpg": $index 
            <br/>
            #set ($index = $index)
            <br/>
            index-3: $index
            <br/>
            #set ($end = $string.substring.reverse($index))
            <br/>
            end: $end 
            <br/>
            
            <h1>trying to display folder contents</h1>
            
        #set ( $currentPage = $_.locatePage($currentPagePath) )
        #set ( $parentFolder = $_.locateFolder($currentPage.parentFolderIdentifier.path.pathAsString) )
        
        $parentFolder.metadata.displayName
        #set ( $currentFolder = $currentPage.parentFolder )  
        
         #set($folder = $currentFolder)
                #outputFolder($folder)
                #macro(outputFolder $folder)
                   #set($children = $folder.children)
                   #set($sortedChildren = $_SortTool.sort($children, "folderOrder"))
                   <ul>
                    #foreach($child in $sortedChildren)
                        #if ($child.name.contains("$noDotWildcard"))
                            $child.name
                            #set ($medImage = $child.name)
                            #set( $medImagePath = $linkUrl.replace($withADot, "$medImage") )
                            <br/>
                            medimagepath: "$medImagePath"
                        #end
                        
                    #end
                    
                   </ul>
                #end
                #set($sorted = $_SortTool.sort($assets, "metadata.dynamicField(myDynamicField).value"))
                #set($sorted = $_SortTool.sort($pages, "structuredDataNode(myField).textValue"))
                
            
                #set ( $parentDir = $currentPage.parentFolder )
                #set ( $children = $parentDir.children )
                $parentDir
                parentDir.children
        
            ## #set($img = $_XPathTool.selectSingleNode($contentRoot, '//masthead/backgroundImageDesktop/fileLink'))
        
            ## img $img
        
            ## #set ($mobileBgUrl = #addBackgroundImage($backgroundImageMobile))
            ## #set ($lqip = $desktopBgUrl$mobileBgUrl).value
            ## lqip $lqip
        #end
    </ul>
        </div>
    ## end output hints
    
    <style>
     .container {
	margin-top: 20px;
    }
    
    .progressive-image {
    	position: relative;
    	overflow: hidden;
      transition: opacity 1s linear;
    
    }
    
    .progressive-image div {
      width: 100%;
    	padding-top: 100%;
    	background-size: cover!important;
    	background-position: center center!important;
    }
    
    .progressive-image .loadingImage {
    	filter: blur(50px);
      /* this is needed so Safari keeps sharp edges */
      transform: scale(1);
    }
    
    .progressive-image .overlay {
    	position: absolute;
      top: 0;
    	opacity: 0;
      transition: opacity 1s linear;
    
    }
    
    @media screen and (max-width: 768px) {
        .ad-landing-masthead article {
          display: none;
        }
    }
    @media screen and (min-width: 768px) {
        .ad-landing-masthead .masthead-hero {
            min-height: 550px;
        }
        .ad-landing-masthead .masthead-content {
            min-height: 400px;
        }
        .ad-landing-masthead .masthead-content-panel {
            min-height: 400px;
        }
    }
    
    </style>
    ## end nick

    <div class="ad-landing-masthead">
      <div class="masthead-header">
        <img class="header-mobile" #outputSrc($mobileLogoFields) alt="$_EscapeTool.xml($mobileLogoFields.getChild('alternateText').value)"/>
        <div class="header-desktop">
          <img class="header-logo-desktop" #outputSrc($desktopLogoFields) alt="$medimagepath"/>
          <p class="header-text-desktop">$_SerializerTool.serialize($headerText, true)</p>
        </div>
      </div>
     
     
    ##   <div class="masthead-hero">
    ##     <!-- There are two elements with background images because of the major design difference between the mobile and desktop layouts -->
    ##     <div class="background-image" title="desktop hero background image" style=#addBackgroundImage($backgroundImageMobile)>
    ##       <article title="mobile hero background image" style=#addBackgroundImage($backgroundImageMobile)>
    ##         <div class="content">
    ##           <h1 class="title">$_EscapeTool.xml($heroTitle)</h1>
    ##           <h2 class="subtitle">$_EscapeTool.xml($heroSubtitle)</h2>
    ##         </div>
    ##       </article>
    ##     </div> 
    ##   </div>
    
##     <div class="progressive-image">
## 		<div class="loadingImage"
## 			 style=#addBackgroundImage($backgroundImageMobile)
## 			 data-image=#getFileLink($backgroundImageDesktop)>
## 		</div>

## 		<div class="overlay"></div>
## 	</div>
        <h1>Cascade is intuitive and great</h1>
        #set ( $content = $_XPathTool.selectSingleNode($n, "system-data-structure/content").value )
        <div style=#cascadeBgImage($backgroundImageDesktop)> </div>
        
      <div class="masthead-hero">
        <!-- There are two elements with background images because of the major design difference between the mobile and desktop layouts -->
            <div class="background-image">
                <div class="progressive-image">
            		<div class="loadingImage"
            			 style=#addBackgroundImage($backgroundImageMobile)
            			 data-image=#getFileLink($backgroundImageDesktop)>
            		
            		      <article title="mobile hero background image progressive-image">
            		        <div class="loadingImage" style="{$tinyImage}" data-image=#getFileLink($backgroundImageMobile)>
                                <div class="content">
                                  <h1 class="title">$_EscapeTool.xml($heroTitle)</h1>
                                  <h2 class="subtitle">$_EscapeTool.xml($heroSubtitle)</h2>
                                </div>
                            </div>
                          </article>
                    </div>  
                    <div class="overlay"></div>
            	</div>
            </div>
        </div>
      
      <div class="masthead-content">
        <section aria-labelledby="mastheadcontentpanel" class="masthead-content-panel">
          <h2 id="mastheadcontentpanel">$_EscapeTool.xml($formTitle)</h2>
          
          <div class="calls-to-action">
            <div id="form_$_EscapeTool.xml($formId)">Loading...</div>
            <script>/*<![CDATA[*/
              var script = document.createElement('script');
              script.async = 1;
              script.src = 'https://go.chapman.edu/register/?id=$_EscapeTool.xml($formId)&output=embed&div=form_$_EscapeTool.xml($formId)' + ((location.search.length > 1) ? '&' + location.search.substring(1) : '');
              var s = document.getElementsByTagName('script')[0];
              s.parentNode.insertBefore(script, s);
            
            
            
 console.log('hello nick')
                  $(function(){

                      $('.progressive-image').each(function(){
                    
                        var image = new Image();
                        var previewImage = $(this).find('.loadingImage');
                        var newImage = $(this).find('.overlay');
        
                    
                        image.onload = function(){
                          newImage.css('background-image', 'url(' + image.src + ')');
                          newImage.css('opacity', '1');
                          console.log('complete');
                        };
                    
                        image.src = previewImage.data('image');
                    
                      });
                    
                    });
            /*]]>*/</script>
            
           
          </div>
        </section>
      </div>
    
      <div class="masthead-footer">
        <h2 class="footer-text-desktop">CHAPMAN UNIVERSITY</h2>
      </div>
    </div>
#end