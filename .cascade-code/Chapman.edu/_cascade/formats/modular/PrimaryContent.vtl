<div class="page-meta hidden">
    nick testing in /_cascade/formats/modular/PrimaryContent...
    <ul>
        <li>last published: $currentPage.lastPublishedOn</li>
        <li>$currentPage.parentFolder.path</li>
        current page path $currentPage.path
        current page StructuredData $currentPage.StructuredData
        #set ($structuredData = $currentPage.StructuredData ) 
        
        currentPgae Parentfolder: $currentPage.parentFolder.path
        ## #set( $folder    = $_.locateFolder("$currentPage.parentFolder.path", 'Chapman.edu') )
        
        
        ## #set( $folder    = $_.locateFolder('test-section/nick-test/contextual-uninav/students/health-and-safety/health-services', 'Chapman.edu') )
        #set( $folder    = $_.locateFolder($currentPage.parentFolder.path, 'Chapman.edu') )
        ##  #set( $folder    = $_.locateFolder('/test-section/nick-test', 'Chapman.edu') )
        folder: $folder
        
        #set( $children  = $folder.children )
    
            #if( $children.size() > 0 )
            #set( $children    = $folder.children )
            #set ($query = $_.query())
            children: $children
            
            #set( $linkAbleAssetTypes = ["folder"] )
            $linkAbleAssetTypes
            
            
            parentfolder: $folder.parentFolder.path
            #traverseFolder($folder, 1)##

   
   metafield $currentPage.parentFolder.metadata.getDynamicField("Custom Navigation").value
   
#macro(traverseFolder $folderRef $depth)##
## OBJECTIVE: SET THE METADATA DYNAMIC FIELD CALLED "CUSTOM NAVIGATION"
## THIS WILL ULTIMATELY ALLOW SUBDIRECTORY'S CHILD PAGES TO INHERIT A CUSTOM NAVIGATION SET ON THE TOP LEVEL DIRECTORY

traversal: 
  #if($folderRef.children.size() > 0)##
        #foreach($child in $folderRef.children)##
        ##  FOLDERS ONLY, BECAUSE WE'RE SETTING THE METADATA DYNAMIC FIELD CALLED "CUSTOM NAVIGATION"
           #if ( $child.assetType == "folder") 
              #set ($currentFolderPath = "'" + $child.path + "'")
              #set ($currentfolderID = "'" + $child.identifier.id + "'")
              
              #set ($parentFolder = $child.parentFolder)
              current directory: $child.path | parentFolder:  $parentFolder.path
              
            ##   - $_PropertyTool.outputProperties($parentFolder)
              - parentfolder isnull? $_PropertyTool.isNull($parentFolder)
              
            #if (!$_PropertyTool.isNull($parentFolder) && $depth < 20) 
            ## #if (!$_PropertyTool.isNull($parentFolder) && !$_PropertyTool.isEmpty($parentFolder.value))
                #set ($currentParentFolder = $_.locateFolder($parentFolder.path, 'Chapman.edu') )
                depth: $depth
                the parent folder: $parentFolder.path
                #traverseFolder($currentParentFolder, $_MathTool.add($depth, 1))##

                
                ## #traverseFolder($_.locateFolder('test-section/nick-test/contextual-uninav/students/health-and-safety/health-services', 'Chapman.edu'), 1)##
                ## #traverseFolder($_.locateFolder($parentFolder, 'Chapman.edu'), 1)##

                

        
            #elseif ($_PropertyTool.isNull($parentFolder)) 
                This must be a top-level directory...
                (No PARENT FOLDER detected on this $child.path folder)
                ## #traverseFolder($child, $_MathTool.add($depth, 1))##
            #end
              
            ##  #if ($child.parentFolder.size() == 0 )
            ##     this is a top-level directory with no parent folders
            ##  #end
        
        
            ## GET THE CUSTOM NAVIGATION METADATA DYNAMIC FIELD, IF IT EXISTS:
            #set ($subFolderCustomNav = $child.metadata.getDynamicField('Custom Navigation'))
            #if (!$_PropertyTool.isNull($subFolderCustomNav) && !$_PropertyTool.isEmpty($subFolderCustomNav.value))
                hereitis $child.name | $subFolderCustomNav.value
            #else 
                no custom navigation detected on this $child.name folder
                ## #traverseFolder($child, $_MathTool.add($depth, 1))##
            #end
            
            ## props $_PropertyTool.outputProperties($subFolderCustomNav)
      
    
        #end
    #end
        
  #end##
#end
#end

        
        
        #set ($customNavigationFolderPath = $_.locateFolder('/_cascade/blocks/html/custom-navigation', 'Chapman.edu'))
            custom block loop:
        #foreach($child in $customNavigationFolderPath.children)
            navblock: $child.name
            
            #if (!$customNavArray)
              #set($customNavArray = [])
            #end
            $customNavArray.add($child.name)
        #end
         customNavarray: $customNavArray
         $currentPage.path
         
         #foreach( $block in $customNavArray )
            ## #set ($block = $block.replace('Custom Navigation - '))
            foreachblock: $block : $currentPage.path
            
            #if ($currentPage.path.contains($block))
                #log("aha! ${block}")
                #set ($customNavBlock = $block)
            #end
         #end
         
        ## #set ($customNavBlock = $currentPage.parentFolder.metadata.getDynamicField('Custom Navigation').value.replaceAll("Chapman.edu", "")))
        <li>Custom Navigation Path: $customNavBlock.path</li>
        
        #set ($currentPagePath = $currentPage.path)
        #set ($customBlock = $_.locateBlock("_cascade/blocks/html/custom-navigation/${customNavBlock}", "Chapman.edu"))
        customblock path: $customBlock.path
        #set ($customBlockPath = $customBlock.path)
        #log($customBlockPath)
        
        $customBlock.StructuredData
        #set ($customBlockID = $customBlock.identifier.id)
          
          customBlock ID: $customBlockID
          #if ($currentPage.parentFolder.metadata.getDynamicField('NN Test - Custom Navigation').value != '')
          
          foldername $currentPage.parentFolder.name
          <li>Custom Nav enabled</li>
            
            
            #set ($currentPageID = $currentPage.identifier.id)
            ## $currentPage
            currentPageID $currentPageID 
            
            <![CDATA[#protect 
            <script>

           $(function () {
           console.log('current page ID: ' + "$currentPageID")
           var readURL =
  "https://dev-cascade.chapman.edu/api/v1/read/page/" +
  "${currentPageID}" +
  "?" +
  "apiKey=25c1b597-04f0-4888-90ed-68719408964c";

var editURL =
  "https://dev-cascade.chapman.edu/api/v1/edit/page/" +
  "${currentPageID}" +
  "?" +
  "apiKey=25c1b597-04f0-4888-90ed-68719408964c";

console.log("API read url: " + readURL);

// Not declared `async` because it returns a promise already
function wait(ms) {
  // Returns a promise that we can `await`
  return new Promise((resolve, reject) => {
    setTimeout(function () {
      console.log(`Waiting for ${ms}ms`);
      // Resolve the promise with the timeout value,
      // not really important here with what it is resolved
      resolve(ms);
    }, ms);
  });
}

async function getData() {
  try {
    // GET some data from whereever
    let response = await fetch(readURL);

    let data = await response.json();

    return data;
  } catch (err) {
    console.log(err);
    return null;
  }
}

// IIFE to use `await` at the top level
(async function manipulateData() {
  // this is an infinite loop, for developing you might want
  // a way to stop it, can crash your browser if you mess
  // it up inside =)...
  // while (true) {
  console.log("getting data...");
  let data = await getData();
  console.log(data);

  var pageConfigArray = data.asset.page.pageConfigurations;
  pageConfigArray.forEach(function (config, index) {
    if (config.name == "html") {
      var configPageRegions = config.pageRegions;
      console.log(configPageRegions);

      configPageRegions.forEach(function (config, index) {
        if (config.name == "UNINAV") {
          // CURRENT PAGE CONFIG VALUES - WE WILL UPDATE THESE BELOW!
          let blockID = config.blockId;
          let blockPath = config.blockPath;
          console.log("current block id: " + blockID);
          console.log("current block path: " + blockPath);

          // UPDATE PAGE CONFIG WITH OUR NEW VALUES FROM THE PARENT FOLDER METADATA
          // TESTING DATA ONLY - ( REPLACE THESE VALUES WITH VELOCITY VALUES )
        ##   const customBlockPath =
        ##     "$customBlockPath";
        ##   const customBlockID = "$customBlockID";

        config.blockId = "${customBlockID}";
        config.blockPath = "${customBlockPath}";

          return blockID;
          return blockPath;

        ##   console.log("updated custom block ID: " + config.blockId);
        ##   console.log("updated custom block PATH: " + config.blockPath);
        }
      });
    } // pageConfigArray.forEach() callback end
  });
  console.log(data.asset.page.pageConfigurations);

  fetch(editURL, {
    method: "POST", // or 'PUT'
    headers: {
      "Content-Type": "application/json",
    },
    body: JSON.stringify(data),
  })
    .then((response) => response.json())
    .then((data) => {
      console.log("Success:", data);
    })
    .catch((error) => {
      console.error("Error:", error);
    });
})();

           });
            </script>
        #protect]]>    

        #end
        

      
    </ul>
</div>

##Import all the widget formats
#import( "/_cascade/formats/modular/widgets/Text with CTA" )
#import( "/_cascade/formats/modular/widgets/Text Editor Widget" )
#import( "/_cascade/formats/modular/widgets/RSS Feed Display" )
#import( "/_cascade/formats/modular/widgets/Program Events" )
#import( "/_cascade/formats/modular/widgets/Banner Notification" )
#import( "/_cascade/formats/modular/widgets/Career Block" )
#import( "/_cascade/formats/modular/widgets/Carousel" )
#import( "/_cascade/formats/modular/widgets/Collapsibles" )
#import( "/_cascade/formats/modular/widgets/Contact Profile" )
#import( "/_cascade/formats/modular/widgets/Featured News Events Primary Content" )
#import( "/_cascade/formats/modular/widgets/Form Embed" )
#import( "/_cascade/formats/modular/widgets/Form" )
## Note funnel-2up not used in 3 column, only 2 column
#import( "/_cascade/formats/modular/widgets/Grid Block Widget" )
#import( "/_cascade/formats/modular/widgets/Funnels 1up" )
#import( "/_cascade/formats/modular/widgets/Funnels 2up" )
#import( "/_cascade/formats/modular/widgets/Logo Image Rotator" )
#import( "/_cascade/formats/modular/widgets/Personnel" )
#import( "/_cascade/formats/modular/widgets/Tabs" )
#import( "/_cascade/formats/modular/widgets/Testimonial" )
#import( "/_cascade/formats/modular/widgets/Text Editor" )
#import( "/_cascade/formats/modular/widgets/Three Photo Callout" )
#import( "/_cascade/formats/modular/widgets/Photo Callout" )
#import( "/_cascade/formats/modular/widgets/Twitter Feed" )
#import( "/_cascade/formats/modular/widgets/25Live Calendar" )
#import( "/_cascade/formats/modular/widgets/A-Z Listing" )
#import( "/_cascade/formats/modular/widgets/Shared Content - Dept Contacts Primary Content" )
#import( "/_cascade/formats/modular/widgets/Shared Content - Degrees Primary Content" )
#import( "/_cascade/formats/modular/widgets/Faculty Info Primary" )
#import( "/_cascade/formats/modular/widgets/Html Block" )
#import( "/_cascade/formats/modular/widgets/Next Steps" )
#import( "/_cascade/formats/modular/widgets/Quick Fact Blocks" )
#import( "/test-section/nick-test/query" )


## Reserved Block Format not finished/working:
#import( "/_cascade/formats/modular/widgets/Reserved Block Format" )
##
#set ($currentPage = $_XPathTool.selectSingleNode($contentRoot, "//system-page[@current]") )
#set ( $primaryContent = $currentPage.getChild('system-data-structure').getChild('primaryContent') )
#set ($widgets = $_XPathTool.selectNodes($primaryContent, "widget") )
##
<h1>
    <span class="bullet">»</span>
    ${_EscapeTool.xml($primaryContent.getChild('pageTitle').value)}
</h1>


##
## Widgets
#foreach ($widget in $widgets)
##
    #set ($widgetType = $widget.getChild('widgetType').value )
<!-- in forEach loop for $widgetType widget -->



 ##
    #if ($widgetType == 'Hide From Search')
          #outputHideFromSearch($widget)
    #end
##
##
    #if ($widgetType == 'Restricted Widgets (Permission-Based or Retiring)')
      #set ($displayWidget = $widget.getChild('textEditorWidget').getChild('display').value)
      #if ($displayWidget == 'Yes')
          #outputTextEditorWidget($widget)
      #end
    #end
##
##
    #if ($widgetType == 'New Text Editor')
      #set ($displayWidget = $widget.getChild('textEditorWidget').getChild('display').value)
      #if ($displayWidget == 'Yes')
          #outputTextEditorWidget($widget)
      #end
    #end
##
##
    #if ($widgetType == 'Text with CTA')
      #set ($displayWidget = $widget.getChild('textWithCTA').getChild('display').value)
      #if ($displayWidget == 'Yes')
          #outputTextWithCTA($widget)
      #end
    #end
##
##
    #if ($widgetType == 'RSS Feed Display')
      #set ($displayWidget = $widget.getChild('rssFeedDisplay').getChild('display').value)
      #if ($displayWidget == 'Yes')
          #outputRssFeedDisplayWidget($widget)
      #end
    #end
##
##
    #if ($widgetType == 'Program Events')
        #set ($displayWidget = $widget.getChild('programEvents').getChild('display').value)
        #if ($displayWidget == 'Yes')
            #outputProgramEventsWidget($widget)
        #end
    #end
##    
##    
    #if ($widgetType == 'Banner Notification')
        #set ($displayWidget = $widget.getChild('bannerNotificationWidget').getChild('display').value)
        #if ($displayWidget == 'Yes')
            #outputBannerNotification($widget)
        #end
    #end
##    
    #if ($widgetType == 'Career Block')
        #set ($displayWidget = $widget.getChild('careerBlockWidget').getChild('display').value)
        #if ($displayWidget == 'Yes')
            #outputCareerBlockWidget($widget)
        #end
    #end
##    
    #if ($widgetType == 'Carousel')
        #set ($displayCarousel = $widget.getChild('carousel').getChild('display-carousel').value)
        #if ($displayCarousel == 'Yes')
            #outputCarousel($widget)
        #end
    #end
##    
    #if ($widgetType == 'Collapsible Regions')
        #set ($displayCollapsibles = $widget.getChild('collapsibleRegions').getChild('display-collapsibles').value)
        #if ($displayCollapsibles == 'Yes')
            #outputCollapsibles($widget)
        #end
    #end
##  
     #if ($widgetType == 'Contact Profile')
        #set ($displayContactProfile = $widget.getChild('contact-profile-widget').getChild('display').value)
        #if ($displayContactProfile == 'Yes')
            #outputContactProfile($widget)
        #end
    #end
##    
    #if ($widgetType == 'Form Embed') 
        #set ($displayFormEmbed = $widget.getChild('form-embed').getChild('display-form-embed').value)
        #if ($displayFormEmbed == 'Yes')
            #outputFormEmbed($widget)
        #end
    #end
##    
    #if ($widgetType == 'Form') 
        #set ($displayForm = $widget.getChild('form').getChild('display-form').value)
        #if ($displayForm == 'Yes')
            #outputForm($widget)
        #end
    #end
##
    #if ($widgetType == 'Featured / News / Events')
        #set ($displayNewsEvents = $widget.getChild('FeaturedNewsEvents').getChild('options').value)
        #if ($displayNewsEvents != "Do Not Show")
            #outputFeaturedNewsEvents($widget)
        #end
    #end
##    
    #if ($widgetType == 'Funnels 2up')
        #set ($displayFunnels2up = $widget.getChild('funnels-2up').getChild('display-funnels-2up').value)
        #if ($displayFunnels2up == 'Yes')
            #outputFunnels2up($widget)
        #end
    #end
##    
    #if ($widgetType == 'Funnels 1up')
        #set ($displayFunnels1up = $widget.getChild('funnels-1up').getChild('display-funnels-1up').value)
        #if ($displayFunnels1up == 'Yes')
            #outputFunnels1up($widget)
        #end
    #end
##
##    
#if ($widgetType == 'Grid Block')
    #set ($displayGridBlock = $widget.getChild('gridBlockWidget').getChild('display').value)
    #if ($displayGridBlock == 'Yes')
        #outputGridBlockWidget($widget)
    #end
#end
##        
    #if ($widgetType == 'Personnel Table')
        #set ($displayPersonnel = $widget.getChild('personnel').getChild('display-personnel').value)
        #if ($displayPersonnel == 'Yes')
            #outputPersonnel($widget)
        #end
    #end
##    
    #if ($widgetType == 'Logo Image Rotator')
        #set ($displayLogoRotator = $widget.getChild('logo-image-rotator').getChild('display-logo-image-rotator').value)
        #if ($displayLogoRotator == 'Yes')
            #outputLogoImageRotator($widget)
        #end
    #end
##    
    #if ($widgetType == 'Tabs')
        #set ($displayTabs = $widget.getChild('tabs').getChild('display-tabs').value)
        #if ($displayTabs == 'Yes')
            #outputTabs($widget)
        #end
    #end
##    
    #if ($widgetType == 'Text Editor')
        #set ($displayWYSIWYG = $widget.getChild('wysiwyg-editor').getChild('display-wysiwyg-editor').value)
        #if ($displayWYSIWYG == 'Yes')
            #outputWYSIWYGEditor($widget)
        #end
    #end
        #if ($widgetType == 'Testimonial')
        #set ($displayTestimonial = $widget.getChild('testimonial-widget').getChild('display').value)
        #if ($displayTestimonial == 'Yes')
            #outputTestimonialWidget($widget)
        #end
    #end
##    
        #if ($widgetType == 'Next Steps')
            #set ($displayNextSteps = $widget.getChild('next-steps-widget').getChild('display').value)
        #if ($displayNextSteps == 'Yes')
            #outputNextStepsWidget($widget)
        #end
    #end
##
##    
#if ($widgetType == 'Photo Callout')
    #set ($displayPhotoCallout = $widget.getChild('photoCalloutWidget').getChild('display').value)
    #if ($displayPhotoCallout == 'Yes')
        #outputPhotoCalloutWidget($widget)
    #end
#end
## 
    #if ($widgetType == 'Three Photo Callout')
        #set ($displayCallout = $widget.getChild('threePhotoCallout').getChild('display-three-photo-callout').value)
        #if ($displayCallout == 'Yes')
            #outputThreePhotoCallout($widget)
        #end
    #end
##    
    #if ($widgetType == 'Twitter Feed')
        #set ($displayTwitterFeed = $widget.getChild('twitterTimeline').getChild('display-twitter-timeline').value)
        #if ($displayTwitterFeed == 'Yes')
            #outputTwitterFeed($widget)
        #end
    #end
##    
    #if ($widgetType == 'Calendar25Live')
        #set ($display25Live = $widget.getChild('Calendar25Live').getChild('display-25live-listing').value)
        #if ($display25Live == 'Yes')
            #output25LiveCalendar($widget)
        #end
    #end
##    
    #if ($widgetType == 'A to Z Listing')
        #set ($displayAtoZ = $widget.getChild('AtoZListing').getChild('display-a-z-listing').value)
        #if ($displayAtoZ == 'Yes')
            #outputAZblock($widget)
        #end
    #end
##    
    #if ($widgetType == 'Html Block')
        #set ($displayHtmlBlock = $widget.getChild('html-block').getChild('display-html-block').value)
        #if ($displayHtmlBlock == 'Yes')
            #outputHtmlBlock($widget)
        #end
    #end
##    
    #if ($widgetType == 'Quick Fact Blocks')
        #set ($displayQuickFactBlocks = $widget.getChild('quickFactBlocksWidget').getChild('display').value)
        #if ($displayQuickFactBlocks == 'Yes')
            #outputQuickFactBlocks($widget)
        #end
    #end
##  
     
## not finished/working yet:   
    #if ($widgetType == 'Reserved Block-Formats')
        #set ($displayReservedBlockFormat = $widget.getChild('reserved-block-formats').getChild('display-reserved-block-formats').value)
        #if ($displayReservedBlockFormat == 'Yes')
            #outputReservedBlockFormat($widget)
        #end
    #end
##
    #if ($widgetType == 'Department Contact Info')
        #if ($widget.getChild('contact').getChild('display-contact').value == 'Yes')
            #set($wHeading = 2)
            #if($_XPathTool.selectSingleNode($widget, "contact/heading").value != "")
                <h2>$_EscapeTool.xml($_XPathTool.selectSingleNode($widget, "contact/heading").value)</h2>
                #set($wHeading = 3)
            #end
            #if($_XPathTool.selectSingleNode($widget, "contact/copy").value.length() > 1)
                $_SerializerTool.serialize($_XPathTool.selectSingleNode($widget, "contact/copy"), true)
            #end
            #displayContactsPrimary($widget, $wHeading)
        #end
    #end
##
     #if ($widgetType == 'Degree Info')
        #if ($widget.getChild('degree').getChild('display-degree').value == 'Yes')
            #set($wHeading = 2)
            #if($_XPathTool.selectSingleNode($widget, "degree/heading").value != "")
                <h2>$_EscapeTool.xml($_XPathTool.selectSingleNode($widget, "degree/heading").value)</h2>
                #set($wHeading = 3)
            #end
            #if($_XPathTool.selectSingleNode($widget, "degree/copy").value.length() > 1)
                $_SerializerTool.serialize($_XPathTool.selectSingleNode($widget, "degree/copy"), true)
            #end
            #displayDegreesPrimary($widget, $wHeading)
        #end
    #end
##
    #if ($widgetType == 'Faculty Info')
        #if ($_XPathTool.selectSingleNode($widget, "faculty/display-faculty").value == 'Yes')
            #set($wHeading = 2)
            #if($_XPathTool.selectSingleNode($widget, "faculty/heading").value != "")
                <h2 class="sectionHeader">$_EscapeTool.xml($_XPathTool.selectSingleNode($widget, "faculty/heading").value)</h2>
                #set($wHeading = 3)
            #end
            #if($_XPathTool.selectSingleNode($widget, "faculty/copy").value.length() > 1)
                $_SerializerTool.serialize($_XPathTool.selectSingleNode($widget, "faculty/copy"), true)
            #end
            #displayFacultyInfo($widget, $wHeading, $foreach.count)
        #end
    #end
##
#end

## end Widgets
