{
    "sourceFile": "app/javascript/src/navigation/uninav.js",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 0,
            "patches": [
                {
                    "date": 1629127770681,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                }
            ],
            "date": 1629127770681,
            "name": "Commit-0",
            "content": "// uninav accessibility\nconst uninav = function () {\n  $(function () {\n    offsetScrollbar();\n    hideCurrentDropdownWhenLoseFocus();\n    closePrevDropdownWhenFocusChanges();\n    toggleAriaExpandVal();\n    handleEscapeKeypress();\n    gs__setSearchResultsZIndex();\n    staticUninav();\n    // loginMenu();\n  });\n\n  function closePrevDropdownWhenFocusChanges() {\n    $(\".uninav__dropdown--parent\").on(\"click keypress\", function (e) {\n      $(\".uninav__dropdown--child\")\n        .not($(this).find(\".uninav__dropdown--child\"))\n        .each(function () {\n          $(this).attr(\"aria-expanded\", \"false\");\n        });\n    });\n  }\n\n  function handleEscapeKeypress() {\n    document.onkeydown = function (evt) {\n      evt = evt || window.event;\n      if (evt.keyCode == 27) {\n        $(\".uninav__dropdown--child\").attr(\"aria-expanded\", \"false\");\n        $(\".js-close-off-canvas-nav\").click();\n      }\n    };\n  }\n\n  function toggleAriaExpandVal() {\n    $(\"#uninav .uninav__dropdown--parent\").on(\"click keypress\", function (e) {\n      if (a11yClick(e) === true) {\n        var menuItem = $(e.currentTarget).find(\".uninav__dropdown--child\");\n\n        if (menuItem.attr(\"aria-expanded\") === \"true\") {\n          $(this)\n            .find(\".uninav__dropdown--child\")\n            .attr(\"aria-expanded\", \"false\");\n        } else {\n          $(this)\n            .find(\".uninav__dropdown--child\")\n            .attr(\"aria-expanded\", \"true\");\n        }\n      }\n    });\n\n    $(\"#uninav .uninav__dropdown--parent\").bind(\"mouseenter\", function (e) {\n      $(this).attr(\"aria-expanded\", \"true\");\n      $(this).find(\".uninav__dropdown--child\").attr(\"aria-expanded\", \"true\");\n    });\n    $(\"#uninav li\").bind(\"mouseleave\", function (e) {\n      $(this).attr(\"aria-expanded\", \"false\");\n      $(this).find(\".uninav__dropdown--child\").attr(\"aria-expanded\", \"false\");\n    });\n  }\n\n  function hideCurrentDropdownWhenLoseFocus() {\n    $(\".uninav__dropdown--child li:last-of-type\").on(\n      \"keydown blur\",\n      function (e) {\n        // SHIFT TAB KEY COMBO\n        if (e.shiftKey && e.keyCode === 9) {\n          $(dropdownParent).attr(\"aria-expanded\", \"false\");\n          //     return false;\n        } else if (e.keyCode === 9) {\n          // TAB KEY PRESS\n          var dropdownParent = $(this).closest(\".uninav__dropdown--child\");\n          $(dropdownParent).attr(\"aria-expanded\", \"false\");\n          // return false;\n        } else if (e.type == \"blur\") {\n          $(dropdownParent).attr(\"aria-expanded\", \"false\");\n        }\n      }\n    );\n    $(\".uninav__dropdown--child li:first-child\").on(\n      \"keydown blur\",\n      function (e) {\n        // SHIFT TAB KEY COMBO\n        var dropdownParent = $(this).closest(\".uninav__dropdown--child\");\n        if (e.shiftKey && e.keyCode === 9) {\n          $(dropdownParent).attr(\"aria-expanded\", \"false\");\n          //     return false;\n        }\n      }\n    );\n    // handle clicking outside of dropdown item\n    $(document).on(\"click keydown blur focusOut\", function (e) {\n      if (\n        $(e.target)\n          .closest(\".uninav__dropdown--parent\")\n          .find(\".uninav__dropdown--child\").length === 0\n      ) {\n        $(\".uninav__dropdown--child\").attr(\"aria-expanded\", \"false\");\n      }\n    });\n  }\n\n  function collapseAriaWhenClickOutside() {\n    $(document).mouseup(function (e) {\n      var container = $(\".uninav__dropdown--parent\");\n      // if the target of the click isn't the container nor a descendant of the container\n      if (!container.is(e.target) && container.has(e.target).length === 0) {\n        container.hide();\n      }\n    });\n  }\n\n  function a11yClick(event) {\n    if (event.type === \"click\") {\n      return true;\n    } else if (event.type === \"keypress\") {\n      var code = event.charCode || event.keyCode;\n      if (code === 32 || code === 13) {\n        return true;\n      }\n    } else {\n      return false;\n    }\n  }\n  // end uninav accessibility\n  // off-canvas overlay - add to main content when expanded\n  $(function () {\n    var sectionMenuButton = $(\"#section-menu-hamburger-icon\");\n    $(\"#umbrella-nav-button-toggle, .uninav__hamburger-menu\").on(\n      \"click\",\n      function () {\n        $(\"html, #main\").addClass(\"off-canvas__blur\");\n      }\n    );\n    $(\".js-close-off-canvas-nav\").on(\"click\", function () {\n      $(\"html, #main\").removeClass(\"off-canvas__blur\");\n    });\n  });\n  // gs = Google Search\n  // replace Google Custom Search default placeholder\n  window.onload = gs__customPlaceholder;\n\n  function gs__customPlaceholder() {\n    document\n      .getElementById(\"gsc-i-id1\")\n      .setAttribute(\"placeholder\", \"Search...\");\n    document.getElementById(\"gsc-i-id1\").style.opacity = \"1\";\n  }\n  // TODO: iOS style frosted/blurred background. CSS filter: blur(2px) performance is terrible\n  $(window).on(\"load\", function () {\n    if ($(\"table.gstl_50\").length) {\n      $(\"table.gstl_50:not([role])\").attr(\"role\", \"presentation\");\n      $(\"#gsc-i-id1\").on(\"input focus click\", function () {\n        gs__blurBg();\n        // Google Search Table - add aria role\n        $(\"table.gstl_50:not([role])\").attr(\"role\", \"presentation\");\n      });\n    }\n  });\n  $(window).on(\"load resize\", function (e) {\n    gs__mobileReveal();\n  });\n\n  function gs__mobileReveal() {\n    var searchInputDesktop = $(\".uninav__search-input--desktop\");\n    var searchButtonMobile = $(\"#uninav__search-button--mobile\");\n    $(searchButtonMobile).on(\"click keypress\", function (e) {\n      if (a11yClick(e) === true) {\n        $(searchButtonMobile).addClass(\"uninav__hidden\");\n        $(\"#uninav\").addClass(\"utility-only\");\n        $(\".uninav__logo, .uninav__hamburger-menu\").addClass(\n          \"logo--underneath\"\n        );\n\n        $(searchInputDesktop).addClass(\"uninav__reveal\").addClass(\"slide-left\");\n        $(\"#gsc-i-id1\").focus();\n        $(\".gsst_a\").show();\n\n        $(\"#gs_st50, .gsc-results-close-btn\").on(\n          \"click keypress\",\n          function (e) {\n            if (a11yClick(e) === true) {\n              e.preventDefault();\n              $(\"#uninav\").removeClass(\"utility-only\");\n              $(searchInputDesktop).removeClass(\"uninav__reveal\");\n              $(\".uninav__logo, .uninav__hamburger-menu\").removeClass(\n                \"logo--underneath\"\n              );\n              $(\".uninav__cta--wrapper\").removeClass(\"cta--underneath\");\n              $(\".uninav__cta--wrapper\").css(\"z-index\", \"initial\");\n              $(\".uninav__cta--wrapper\").css(\"position\", \"initial\");\n              $(\".uninav__cta--wrapper\").css(\"opacity\", \"initial\");\n\n              $(searchButtonMobile).removeClass(\"uninav__hidden\");\n\n              $(searchInputDesktop).removeClass(\"uninav__reveal\");\n              $(searchButtonMobile).removeClass(\"uninav__hidden\");\n              $(searchInputDesktop).find(\"input\").val(\"\");\n            }\n          }\n        );\n      }\n    });\n  }\n\n  function gs__setSearchResultsZIndex() {\n    $(\".gssb_c[style]\").css(\"z-index\", \"999999999999999999999999999999\");\n  }\n\n  function gs__blurBg() {\n    $(\".gsc-completion-container\").css(\"background\", \"transparent\");\n    $(\".gsc-completion-container\").css(\n      \"background-color\",\n      \"rgba(255, 255, 255, 0.98)\"\n    );\n  }\n\n  function offsetScrollbar() {\n    var html = document.querySelector(\"html\");\n    var scrollbarWidth = window.innerWidth - html.offsetWidth;\n    $(\".uninav__utility-nav--wrapper\").css(\"margin-right\", scrollbarWidth);\n  }\n};\n\nfunction loginMenu() {\n  $(\".uninav__login\").click(function () {\n    // $(this).find(\".uninav__login--wrapper\").toggle();\n  });\n}\n\nfunction staticUninav() {\n  if ($(\"#uninav.static\").length) {\n    console.log(\n      \"replacing static navigation with dynamic from sibling index.aspx\"\n    );\n    $(\"nav#uninav\").fadeOut();\n    $(\"header\").load(\n      \"./index.aspx nav#uninav\",\n      function (responseTxt, statusTxt, xhr) {\n        if (statusTxt == \"success\")\n          // alert(\"External content loaded successfully!\");\n          reinit_drilldown_handlers();\n        if (statusTxt == \"error\")\n          console.log(\"Error: \" + xhr.status + \": \" + xhr.statusText);\n        $(\"nav#uninav\").show();\n      }\n    );\n\n    function reinit_drilldown_handlers() {\n      // LITERALLY THE CONTENTS OF OFF-CANVAS-NAV.JS\n      // Restructures toggle DOM order for immediate tabindex after Uninav. Remains the same visually.\n      $(\".uninav__umbrella-nav-button-container\")\n        .detach()\n        .appendTo(\"nav#uninav\");\n\n      var $offCanvasNavContainer = $(\"#uninav .off-canvas-nav-container\"),\n        menuVisibleXVal = 0,\n        menuWidth = $(window).width() > 600 ? 410 : 350,\n        $rootUmbrellaDiv = $(\"#uninav #off-canvas-umbrella\"),\n        $rootMainDiv = $(\"#uninav #off-canvas-main\"),\n        $rootDrillDownNavUmbrella = $(\n          \"#off-canvas-umbrella-navigation .root-umbrella-nav\"\n        ),\n        $rootDrillDownNavMain = $(\"#off-canvas-main-navigation .root-main-nav\"),\n        $rootElement = $(\".off-canvas-nav-container\"),\n        translateXVal = menuWidth,\n        headerHeight =\n          $(\"#uninav .cu-off-canvas-header\").height() +\n          $(\"#uninav .menu-header\").height(),\n        $sectionMenuButton = $(\n          \"#uninav .uninav__umbrella-nav-button-container button\"\n        ),\n        $offCanvasOverlay = $(\".off-canvas-overlay#js-off-canvas-overlay\"),\n        resizeTimer = null;\n\n      $(window).resize(checkResizeRootDrillDown);\n\n      $rootDrillDownNavMain.currentWidth = menuWidth;\n      $rootDrillDownNavUmbrella.currentWidth = menuWidth;\n\n      $sectionMenuButton.on(\"click\", function () {\n        $offCanvasNavContainer.css({\n          transform: \"translateX(\" + menuVisibleXVal + \"px)\",\n          visibility: \"visible\",\n        });\n        $offCanvasOverlay.show();\n\n        // shift focus\n        setTimeout(function () {\n          $(\"#js-off-canvas-nav-container #main-logo a\").focus();\n        }, 100);\n      });\n\n      $(window).on(\"scroll\", setSectionMenuButtonSize);\n\n      //CLOSE OFF-CANVAS-NAV\n      $offCanvasNavContainer\n        .find(\".close.js-close-off-canvas-nav\")\n        .on(\"click\", function () {\n          $offCanvasNavContainer.css({\n            transform: \"translateX(-\" + menuWidth + \"px)\",\n            visibility: \"hidden\",\n          });\n          $offCanvasOverlay.hide();\n\n          setTimeout(function () {\n            $(\"#main a\").first().focus();\n          }, 1000);\n        });\n\n      $offCanvasNavContainer\n        .find(\".close.js-close-off-canvas-nav\")\n        .on(\"keydown\", function (e) {\n          if (e.key === \"Enter\" || e.key === \" \") {\n            e.preventDefault();\n            $offCanvasNavContainer.css({\n              transform: \"translateX(-\" + menuWidth + \"px)\",\n              visibility: \"hidden\",\n            });\n            $offCanvasOverlay.hide();\n\n            setTimeout(function () {\n              $(\"#main a\").first().focus();\n            }, 1000);\n          }\n        });\n\n      $rootUmbrellaDiv.find(\".toggle-menu-label\").on(\"click\", function () {\n        changeContextualMenus($(this));\n      });\n\n      $rootMainDiv.find(\".toggle-menu-label\").on(\"click\", function () {\n        changeContextualMenus($(this));\n      });\n\n      $rootUmbrellaDiv.find(\".toggle-menu-label\").on(\"keydown\", function (e) {\n        if (e.key === \"Enter\" || e.key === \" \") {\n          e.preventDefault();\n          changeContextualMenus($(this));\n        }\n      });\n\n      $rootMainDiv.find(\".toggle-menu-label\").on(\"keydown\", function (e) {\n        if (e.key === \"Enter\" || e.key === \" \") {\n          e.preventDefault();\n          changeContextualMenus($(this));\n        }\n      });\n\n      $(\"#uninav .uninav__hamburger-menu .hamburger-menu-button\").on(\n        \"click\",\n        function (e) {\n          e.preventDefault();\n          $offCanvasNavContainer.css({\n            transform: \"translateX(\" + menuVisibleXVal + \"px)\",\n            visibility: \"visible\",\n          });\n\n          $offCanvasOverlay.show();\n        }\n      );\n\n      $(\"#uninav .uninav__hamburger-menu .hamburger-menu-button\").on(\n        \"keydown\",\n        function (e) {\n          if (e.key === \"Enter\" || e.key === \" \") {\n            e.preventDefault();\n            $offCanvasNavContainer.css({\n              transform: \"translateX(\" + menuVisibleXVal + \"px)\",\n              visibility: \"visible\",\n            });\n\n            $offCanvasOverlay.show();\n          }\n        }\n      );\n\n      $rootMainDiv.find(\".menu-header .menu-label\").on(\"click\", function () {\n        moveOffCanvasToRoot($(this));\n      });\n\n      $rootUmbrellaDiv\n        .find(\".menu-header .menu-label\")\n        .on(\"click\", function () {\n          moveOffCanvasToRoot($(this));\n        });\n\n      $rootMainDiv.find(\".menu-header .menu-label\").on(\"keydown\", function (e) {\n        if (e.key === \"Enter\" || e.key === \" \") {\n          e.preventDefault();\n          moveOffCanvasToRoot($(this));\n        }\n      });\n\n      $rootUmbrellaDiv\n        .find(\".menu-header .menu-label\")\n        .on(\"keydown\", function (e) {\n          if (e.key === \"Enter\" || e.key === \" \") {\n            e.preventDefault();\n            moveOffCanvasToRoot($(this));\n          }\n        });\n\n      $offCanvasOverlay.on(\"click\", function () {\n        $offCanvasNavContainer.css({\n          transform: \"translateX(-\" + menuWidth + \"px)\",\n          visibility: \"hidden\",\n        });\n        $(this).hide();\n      });\n\n      $rootDrillDownNavUmbrella.on(\n        \"click\",\n        \".drill-down-parent\",\n        drillMenuDown\n      );\n\n      $rootDrillDownNavMain.on(\"click\", \".drill-down-parent\", drillMenuDown);\n\n      $rootDrillDownNavUmbrella.on(\"click\", \".toggle-drilldown\", drillMenuDown);\n\n      $rootDrillDownNavMain.on(\"click\", \".toggle-drilldown\", drillMenuDown);\n\n      $rootDrillDownNavUmbrella.on(\"click\", \".menu-back\", drillMenuUp);\n\n      $rootDrillDownNavMain.on(\"click\", \".menu-back\", drillMenuUp);\n\n      $rootDrillDownNavUmbrella.on(\n        \"keydown\",\n        \".drill-down-parent\",\n        function (e) {\n          if (e.key === \"Enter\" || e.key === \" \") {\n            e.preventDefault();\n            var $nextTabableItem = $(this)\n              .siblings(\".drilldown-menu\")\n              .children(\".menu-back\");\n            var drillDown = drillMenuDown.bind(this);\n\n            drillDown();\n\n            //REASON FOR SET TIMEOUT SEE THIS SO\n            //https://stackoverflow.com/questions/3580068/is-settimeout-with-no-delay-the-same-as-executing-the-function-instantly/3580703#3580703\n            setTimeout(function () {\n              $nextTabableItem.focus();\n            }, 500);\n            return;\n          }\n        }\n      );\n\n      $rootDrillDownNavMain.on(\"keydown\", \".drill-down-parent\", function (e) {\n        if (e.key === \"Enter\" || e.key === \" \") {\n          e.preventDefault();\n          var $nextTabableItem = $(this)\n            .siblings(\".drilldown-menu\")\n            .children(\".menu-back\");\n          var drillDown = drillMenuDown.bind(this);\n\n          drillDown();\n\n          //REASON FOR SET TIMEOUT SEE THIS SO\n          //https://stackoverflow.com/questions/3580068/is-settimeout-with-no-delay-the-same-as-executing-the-function-instantly/3580703#3580703\n          setTimeout(function () {\n            $nextTabableItem.focus();\n          }, 500);\n          return;\n        }\n      });\n\n      $rootDrillDownNavUmbrella.on(\"keydown\", \".menu-back\", function (e) {\n        if (e.key === \"Enter\" || e.key === \" \") {\n          e.preventDefault();\n          var $nextTabableItem = $(this)\n            .closest(\".drill-down-list-item\")\n            .children(\".drill-down-parent\");\n          var drillup = drillMenuUp.bind(this);\n\n          drillup();\n\n          //REASON FOR SET TIMEOUT SEE THIS SO\n          //https://stackoverflow.com/questions/3580068/is-settimeout-with-no-delay-the-same-as-executing-the-function-instantly/3580703#3580703\n          setTimeout(function () {\n            $nextTabableItem.focus();\n          }, 500);\n          return;\n        }\n      });\n\n      $rootDrillDownNavMain.on(\"keydown\", \".menu-back\", function (e) {\n        if (e.key === \"Enter\" || e.key === \" \") {\n          e.preventDefault();\n          var $nextTabableItem = $(this)\n            .closest(\".drill-down-list-item\")\n            .children(\".drill-down-parent\");\n          var drillup = drillMenuUp.bind(this);\n\n          drillup();\n\n          //REASON FOR SET TIMEOUT SEE THIS SO\n          //https://stackoverflow.com/questions/3580068/is-settimeout-with-no-delay-the-same-as-executing-the-function-instantly/3580703#3580703\n          setTimeout(function () {\n            $nextTabableItem.focus();\n          }, 500);\n          return;\n        }\n      });\n\n      $(\"#off-canvas-umbrella-navigation .root-umbrella-nav .menu-back\").each(\n        function (idx, item) {\n          Mousetrap(item).bind(\"shift+tab\", function (e) {\n            var currentMenuBack = $(document.activeElement);\n            var drillUp = drillMenuUp.bind(currentMenuBack);\n            drillUp();\n          });\n        }\n      );\n\n      $(\"#off-canvas-main-navigation .root-main-nav .menu-back\").each(function (\n        idx,\n        item\n      ) {\n        Mousetrap(item).bind(\"shift+tab\", function (e) {\n          var currentMenuBack = $(document.activeElement);\n          var drillUp = drillMenuUp.bind(currentMenuBack);\n          drillUp();\n        });\n      });\n\n      function changeContextualMenus($element) {\n        var $otherContextualMenu = $element\n            .parents(\".off-canvas-menu\")\n            .siblings(\".off-canvas-menu\"),\n          $currentContextualMenu = $element.parents(\".off-canvas-menu\"),\n          $activeDrillDownMenu = $otherContextualMenu.find(\n            \".drilldown-menu.active\"\n          );\n\n        $currentContextualMenu.removeClass(\"slide-in\");\n        $currentContextualMenu.addClass(\"slide-out\");\n        $otherContextualMenu.show();\n        $otherContextualMenu.removeClass(\"slide-out\");\n        $otherContextualMenu.addClass(\"slide-in\");\n\n        if (!$activeDrillDownMenu.length) {\n          if (!$rootDrillDownNavMain.initialHeight)\n            $rootDrillDownNavMain.initialHeight = $(\".root-main-nav\").height();\n\n          if (!$rootDrillDownNavUmbrella.initialHeight)\n            $rootDrillDownNavUmbrella.initialHeight =\n              $(\".root-umbrella-nav\").height();\n\n          if ($otherContextualMenu.find(\".root-umbrella-nav\").length) {\n            if (\n              $rootDrillDownNavUmbrella.initialHeight + headerHeight >=\n              $(window).height()\n            ) {\n              $rootElement.css({\n                overflowY: \"scroll\",\n              });\n            } else {\n              $rootElement.css({\n                overflowY: \"hidden\",\n              });\n            }\n            $rootDrillDownNavUmbrella.css({\n              height: $rootDrillDownNavUmbrella.initialHeight,\n            });\n          } else {\n            if (\n              $rootDrillDownNavMain.initialHeight + headerHeight >=\n              $(window).height()\n            ) {\n              $rootElement.css({\n                overflowY: \"scroll\",\n              });\n            } else {\n              $rootElement.css({\n                overflowY: \"hidden\",\n              });\n            }\n            $rootDrillDownNavMain.css({\n              height: $rootDrillDownNavMain.initialHeight,\n            });\n          }\n\n          setTimeout(function () {\n            $currentContextualMenu.hide();\n          }, 500);\n\n          return;\n        }\n\n        if (\n          $activeDrillDownMenu.height() + headerHeight >=\n          $(window).height()\n        ) {\n          $rootElement.css({\n            overflowY: \"scroll\",\n          });\n        } else {\n          $rootElement.css({\n            overflowY: \"hidden\",\n          });\n        }\n\n        setTimeout(function () {\n          $currentContextualMenu.hide();\n        }, 500);\n\n        return;\n      }\n\n      function moveOffCanvasToRoot(element) {\n        if (element.parents(\"#off-canvas-umbrella\").length === 1) {\n          $rootDrillDownNavUmbrella\n            .find(\".drilldown-menu.active\")\n            .removeClass(\"active\");\n          $rootUmbrellaDiv.find(\".root-umbrella-nav\").css({\n            transform: \"translateX(-\" + menuVisibleXVal + \"px\",\n          });\n          $rootUmbrellaDiv.find(\".drilldown-menu\").hide();\n          $rootDrillDownNavUmbrella.removeClass(\"drilled-down\");\n\n          if (\n            $rootDrillDownNavUmbrella.initialHeight + headerHeight >=\n            $(window).height()\n          ) {\n            $rootElement.css({\n              overflowY: \"scroll\",\n            });\n          } else {\n            $rootElement.css({\n              overflowY: \"hidden\",\n            });\n          }\n\n          $rootDrillDownNavUmbrella.css({\n            height: $rootDrillDownNavUmbrella.initialHeight,\n          });\n          return;\n        }\n        $rootDrillDownNavMain\n          .find(\".drilldown-menu.active\")\n          .removeClass(\"active\");\n        $rootMainDiv.find(\".root-main-nav\").css({\n          transform: \"translateX(-\" + menuVisibleXVal + \"px\",\n        });\n        $rootMainDiv.find(\".drilldown-menu\").hide();\n        $rootDrillDownNavMain.removeClass(\"drilled-down\");\n\n        if (\n          $rootDrillDownNavMain.height() + headerHeight >=\n          $(window).height()\n        ) {\n          $rootElement.css({\n            overflowY: \"scroll\",\n          });\n        } else {\n          $rootElement.css({\n            overflowY: \"hidden\",\n          });\n        }\n\n        $rootDrillDownNavMain.css({\n          height: $rootDrillDownNavMain.initialHeight,\n        });\n        return;\n      }\n\n      function drillMenuDown() {\n        var $menuToDrillDownTo = $(this).siblings(\".drilldown-menu\"),\n          ulCurrentPos = getTranslateXVal($rootDrillDownNavMain),\n          umbrellaDrillDown = $(this).parents(\"#off-canvas-umbrella\").length,\n          translateXVal = ulCurrentPos - menuWidth;\n\n        if (umbrellaDrillDown) {\n          (ulCurrentPos = getTranslateXVal($rootDrillDownNavUmbrella)),\n            (translateXVal = ulCurrentPos - menuWidth);\n          $rootDrillDownNavUmbrella.addClass(\"drilled-down\");\n          $rootDrillDownNavUmbrella\n            .find(\".drilldown-menu.active\")\n            .removeClass(\"active\");\n          $menuToDrillDownTo.addClass(\"active\");\n\n          $menuToDrillDownTo.show();\n          $rootElement.animate({\n            scrollTop: 0,\n          });\n          $rootDrillDownNavUmbrella.css({\n            transform: \"translateX(\" + translateXVal + \"px)\",\n          });\n\n          $rootDrillDownNavUmbrella.css({\n            height: $menuToDrillDownTo.height(),\n          });\n\n          if ($menuToDrillDownTo.height() + headerHeight > $(window).height()) {\n            $rootElement.css({\n              overflowY: \"scroll\",\n            });\n            return;\n          }\n\n          $rootElement.css({\n            overflowY: \"hidden\",\n          });\n\n          return;\n        }\n\n        $rootDrillDownNavMain\n          .find(\".drilldown-menu.active\")\n          .removeClass(\"active\");\n        $menuToDrillDownTo.addClass(\"active\");\n        $menuToDrillDownTo.show();\n        $rootDrillDownNavMain.css({\n          transform: \"translateX(\" + translateXVal + \"px)\",\n        });\n        $rootDrillDownNavMain.addClass(\"drilled-down\");\n        $rootElement.animate(\n          {\n            scrollTop: 0,\n          },\n          \"slow\"\n        );\n        if ($menuToDrillDownTo.height() + headerHeight > $(window).height()) {\n          $rootElement.css({\n            overflowY: \"scroll\",\n          });\n          return;\n        }\n\n        $rootElement.css({\n          overflowY: \"hidden\",\n        });\n        return;\n      }\n\n      function drillMenuUp() {\n        var umbrellaDrillDown = $(this).parents(\"#off-canvas-umbrella\").length,\n          ulCurrentPos = getTranslateXVal($rootDrillDownNavMain),\n          translateXVal = ulCurrentPos + menuWidth,\n          $parentDrillDownMenu = $(this)\n            .closest(\".drill-down-list-item\")\n            .closest(\".drilldown-menu\");\n\n        if (umbrellaDrillDown) {\n          $rootDrillDownNavUmbrella\n            .find(\".drilldown-menu.active\")\n            .removeClass(\"active\");\n          $parentDrillDownMenu.addClass(\"active\");\n          (ulCurrentPos = getTranslateXVal($rootDrillDownNavUmbrella)),\n            (translateXVal = ulCurrentPos + menuWidth);\n\n          if (translateXVal === 0) {\n            $rootDrillDownNavUmbrella.removeClass(\"drilled-down\");\n          }\n\n          $rootDrillDownNavUmbrella.css({\n            transform: \"translateX(\" + translateXVal + \"px)\",\n          });\n\n          $(this).parent().hide();\n\n          if (translateXVal == 0) {\n            $rootDrillDownNavUmbrella.css({\n              height: $rootDrillDownNavUmbrella.initialHeight,\n            });\n\n            if (\n              $rootDrillDownNavUmbrella.initialHeight + headerHeight >=\n              $(window).height()\n            ) {\n              $rootElement.css({\n                overflowY: \"scroll\",\n              });\n            } else {\n              $rootElement.css({\n                overflowY: \"hidden\",\n              });\n            }\n\n            return;\n          }\n\n          $rootDrillDownNavUmbrella.css({\n            height: $parentDrillDownMenu.height(),\n          });\n\n          if (\n            $parentDrillDownMenu.height() + headerHeight >=\n            $(window).height()\n          ) {\n            $rootElement.css({\n              overflowY: \"scroll\",\n            });\n          } else {\n            $rootElement.css({\n              overflowY: \"hidden\",\n            });\n          }\n\n          return;\n        }\n\n        if (translateXVal === 0) {\n          $rootDrillDownNavMain.removeClass(\"drilled-down\");\n        }\n\n        $rootDrillDownNavMain\n          .find(\".drilldown-menu.active\")\n          .removeClass(\"active\");\n        $parentDrillDownMenu.addClass(\"active\");\n        $rootDrillDownNavMain.css({\n          transform: \"translateX(\" + translateXVal + \"px)\",\n        });\n        $(this).parent().hide();\n\n        if (translateXVal == 0) {\n          $rootDrillDownNavMain.css({\n            height: $rootDrillDownNavMain.initialHeight,\n          });\n\n          if (\n            $rootDrillDownNavUmbrella.initialHeight + headerHeight >=\n            $(window).height()\n          ) {\n            $rootElement.css({\n              overflowY: \"scroll\",\n            });\n          } else {\n            $rootElement.css({\n              overflowY: \"hidden\",\n            });\n          }\n\n          return;\n        }\n\n        if (\n          $rootDrillDownNavMain.initialHeight + headerHeight >=\n          $(window).height()\n        )\n          $rootElement.css({\n            overflowY: \"scroll\",\n          });\n\n        $rootDrillDownNavMain.css({\n          height: $parentDrillDownMenuHeight,\n        });\n\n        return;\n      }\n\n      function getTranslateXVal(selector) {\n        var transformMatrix =\n          selector.css(\"-webkit-transform\") ||\n          selector.css(\"-moz-transform\") ||\n          selector.css(\"-ms-transform\") ||\n          selector.css(\"-o-transform\") ||\n          selector.css(\"transform\");\n\n        transformMatrix = transformMatrix === \"none\" ? 0 : transformMatrix;\n        if (!isNaN(transformMatrix)) return 0;\n\n        var matrix = transformMatrix.replace(/[^0-9\\-.,]/g, \"\").split(\",\");\n        var x = matrix[12] || matrix[4]; //translate x\n\n        return parseInt(x);\n      }\n\n      function moveToCurrentSetHeight() {\n        var currentPath = $rootElement.find(\"li.current\"),\n          umbrellaNav = $rootDrillDownNavUmbrella.length,\n          $currentPathDrillDownMenu = currentPath.parent(\".drilldown-menu\");\n\n        if (currentPath.length) {\n          $currentPathDrillDownMenu.addClass(\"active\");\n          var $drillDownParents = currentPath.parents(\"ul.drilldown-menu\"),\n            umbrellaDrillDown = currentPath.parents(\n              \"#off-canvas-umbrella\"\n            ).length;\n\n          $drillDownParents.show();\n          $rootDrillDownNavUmbrella.initialHeight =\n            $(\".root-umbrella-nav\").height();\n\n          if (umbrellaDrillDown) {\n            $rootUmbrellaDiv.show();\n            $rootMainDiv.hide();\n\n            $rootDrillDownNavUmbrella.css({\n              transform:\n                \"translateX(-\" + menuWidth * $drillDownParents.length + \"px\",\n            });\n            $rootMainDiv.css({\n              transform: \"translateX(-\" + menuWidth + \"px\",\n            });\n\n            if ($currentPathDrillDownMenu.length) {\n              $rootDrillDownNavUmbrella.addClass(\"drilled-down\");\n              if (\n                $currentPathDrillDownMenu.height() + headerHeight >=\n                $(window).height()\n              ) {\n                $rootElement.css({\n                  overflowY: \"scroll\",\n                });\n              } else {\n                $rootElement.css({\n                  overflowY: \"hidden\",\n                });\n              }\n            } else {\n              if (\n                $rootDrillDownNavUmbrella.initialHeight + headerHeight >=\n                $(window).height()\n              ) {\n                $rootElement.css({\n                  overflowY: \"scroll\",\n                });\n              } else {\n                $rootElement.css({\n                  overflowY: \"hidden\",\n                });\n              }\n            }\n\n            return;\n          }\n\n          $rootMainDiv.show();\n          $rootUmbrellaDiv.hide();\n          $rootDrillDownNavMain.initialHeight =\n            $(\".root-umbrella-nav\").height();\n          $rootDrillDownNavMain.css({\n            transform:\n              \"translateX(-\" + menuWidth * 2 * $drillDownParents.length + \"px\",\n          });\n          $rootUmbrellaDiv.css({\n            transform: \"translateX(-\" + menuWidth + \"px\",\n          });\n\n          if ($currentPathDrillDownMenu.length) {\n            $rootDrillDownNavMain.addClass(\"drilled-down\");\n            if (\n              $currentPathDrillDownMenu.height() + headerHeight >=\n              $(window).height()\n            ) {\n              $rootElement.css({\n                overflowY: \"scroll\",\n              });\n            } else {\n              $rootElement.css({\n                overflowY: \"hidden\",\n              });\n            }\n          } else {\n            if (\n              $rootDrillDownNavMain.initialHeight + headerHeight >=\n              $(window).height()\n            ) {\n              $rootElement.css({\n                overflowY: \"scroll\",\n              });\n            } else {\n              $rootElement.css({\n                overflowY: \"hidden\",\n              });\n            }\n          }\n          return;\n        }\n\n        if (umbrellaNav) {\n          $rootDrillDownNavUmbrella.initialHeight =\n            $(\".root-umbrella-nav\").height();\n\n          if (\n            $rootDrillDownNavUmbrella.initialHeight + headerHeight >=\n            $(window).height()\n          ) {\n            $rootElement.css({\n              overflowY: \"scroll\",\n            });\n          } else {\n            $rootElement.css({\n              overflowY: \"hidden\",\n            });\n          }\n          return;\n        }\n\n        $rootDrillDownNavMain.initialHeight = $(\".root-main-nav\").height();\n\n        if (\n          $rootDrillDownNavMain.initialHeight + headerHeight >=\n          $(window).height()\n        ) {\n          $rootElement.css({\n            overflowY: \"scroll\",\n          });\n        } else {\n          $rootElement.css({\n            overflowY: \"hidden\",\n          });\n        }\n\n        return;\n      }\n\n      function setSectionMenuButtonSize() {\n        var scrollThreshHold = 0.2 * $(window).height();\n\n        if (\n          $(window).scrollTop() < scrollThreshHold &&\n          $sectionMenuButton.hasClass(\"section-menu-small\")\n        ) {\n          $(\".section-menu-text\").show();\n          $(\".section-menu-hamburger-icon\").hide();\n          $sectionMenuButton.removeClass(\"section-menu-small\");\n          return;\n        }\n\n        if (\n          $(window).scrollTop() > scrollThreshHold &&\n          !$sectionMenuButton.hasClass(\"section-menu-small\")\n        ) {\n          $(\".section-menu-hamburger-icon\").show();\n          $(\".section-menu-text\").hide();\n          $sectionMenuButton.addClass(\"section-menu-small\");\n        }\n      }\n\n      function selectLastDrillDownElement() {\n        var $umbrellaLastItem = $(\n            \"#js-off-canvas-nav-container *[tabindex]:visible\"\n          ).last(),\n          $mainLastItem = $(\".off-canvas-utility *[tabindex]:visible\").last(),\n          $umbrellaDrillDownMenus =\n            $rootDrillDownNavUmbrella.find(\".drilldown-menu\"),\n          $mainDrillDownMenus = $rootDrillDownNavMain.find(\".drilldown-menu\");\n\n        $umbrellaDrillDownMenus.each(function (idx, drillDownMenu) {\n          $(drillDownMenu)\n            .children(\":last-child\")\n            .off(\"focusin\")\n            .on(\"focusin\", function (e) {\n              var drilldown = null,\n                self = this,\n                eventListeners = {\n                  click: false,\n                  shiftTab: false,\n                };\n\n              $(document)\n                .off(\"click\")\n                .on(\"click\", function (e) {\n                  e.stopPropagation();\n                  $(document).off(\"click\");\n                  eventListeners.click = true;\n                });\n\n              $(this)\n                .off(\"focusout\")\n                .on(\"focusout\", function (e) {\n                  e.stopPropagation();\n\n                  var $menuBack = $(this).siblings(\".menu-back\");\n\n                  drilldown = setTimeout(function () {\n                    if ($(self).find(\".active\").length) {\n                      return;\n                    }\n\n                    if (!e.relatedTarget) {\n                      return;\n                    }\n\n                    if (eventListeners.shiftTab) {\n                      return;\n                    }\n\n                    if (eventListeners.click) {\n                      return;\n                    }\n                    $(document.activeElement).blur();\n                    drillMenuUp.call($menuBack);\n                    $(self)\n                      .parent()\n                      .closest(\".drill-down-list-item\")\n                      .children(\".drill-down-parent\")\n                      .focus();\n                    return;\n                  }, 500);\n\n                  return;\n                });\n\n              Mousetrap(this).bind(\"shift+tab\", function (e) {\n                e.stopPropagation();\n                Mousetrap.unbind(\"shift+tab\");\n\n                eventListeners.shiftTab = true;\n              });\n            });\n        });\n\n        $mainDrillDownMenus.each(function (idx, drillDownMenu) {\n          $(drillDownMenu)\n            .children(\":last-child\")\n            .off(\"focusin\")\n            .on(\"focusin\", function (e) {\n              var drilldown = null,\n                self = this,\n                eventListeners = {\n                  click: false,\n                  shiftTab: false,\n                };\n\n              $(document)\n                .off(\"click\")\n                .on(\"click\", function (e) {\n                  e.stopPropagation();\n                  $(document).off(\"click\");\n                  eventListeners.click = true;\n                });\n\n              $(this)\n                .off(\"focusout\")\n                .on(\"focusout\", function (e) {\n                  e.stopPropagation();\n\n                  var $menuBack = $(this).siblings(\".menu-back\");\n\n                  drilldown = setTimeout(function () {\n                    if ($(self).find(\".active\").length) {\n                      return;\n                    }\n\n                    if (!e.relatedTarget) {\n                      return;\n                    }\n\n                    if (eventListeners.shiftTab) {\n                      return;\n                    }\n\n                    if (eventListeners.click) {\n                      return;\n                    }\n                    $(document.activeElement).blur();\n                    drillMenuUp.call($menuBack);\n                    $(self)\n                      .parent()\n                      .closest(\".drill-down-list-item\")\n                      .children(\".drill-down-parent\")\n                      .focus();\n                    return;\n                  }, 500);\n\n                  return;\n                });\n\n              Mousetrap(this).bind(\"shift+tab\", function (e) {\n                e.stopPropagation();\n                Mousetrap.unbind(\"shift+tab\");\n\n                eventListeners.shiftTab = true;\n              });\n            });\n        });\n\n        $umbrellaLastItem.on(\"keydown\", function (e) {\n          if (e.key === \"Tab\") {\n            if (e.shiftKey) {\n              return;\n            }\n\n            $offCanvasNavContainer.css({\n              transform: \"translateX(-\" + menuWidth + \"px)\",\n              visibility: \"hidden\",\n            });\n            $offCanvasOverlay.hide();\n            focusMainContent();\n          }\n        });\n\n        $mainLastItem.on(\"keydown\", function (e) {\n          if (e.key === \"Tab\") {\n            if (e.shiftKey) {\n              return;\n            }\n\n            $offCanvasNavContainer.css({\n              transform: \"translateX(-\" + menuWidth + \"px)\",\n              visibility: \"hidden\",\n            });\n            $offCanvasOverlay.hide();\n            focusMainContent();\n          }\n        });\n      }\n\n      $(\".off-canvas-utility\").on(\"focusin\", function (e) {\n        console.log(\"focus\");\n\n        $(\".off-canvas-utility\")\n          .find(\"*[tabindex]:visible\")\n          .last()\n          .on(\"keydown\", function (e) {\n            if (e.key === \"Tab\") {\n              console.log(\"tab\");\n              if (e.shiftKey) {\n                return;\n              }\n\n              console.log(\"focus out\");\n              $offCanvasNavContainer.css({\n                transform: \"translateX(-\" + menuWidth + \"px)\",\n                visibility: \"hidden\",\n              });\n              $offCanvasOverlay.hide();\n              focusMainContent();\n            }\n          });\n      });\n\n      // $('.off-canvas-utility').find('*[tabindex]:visible').last().on(\"focusin\", function (e) {\n      //   console.log('focus')\n\n      // })\n\n      $offCanvasNavContainer\n        .find(\".toggle-menu-label\")\n        .off(\"focusin\")\n        .on(\"focusin\", function () {\n          var eventListeners = {\n            shiftTab: false,\n          };\n\n          Mousetrap(this).bind(\"shift+tab\", function (e) {\n            Mousetrap.unbind(\"shift+tab\");\n            eventListeners.shiftTab = true;\n            return;\n          });\n\n          $(this)\n            .off(\"focusout\")\n            .on(\"focusout\", function () {\n              if (eventListeners.shiftTab === true) {\n                eventListeners.shiftTab = false;\n                return;\n              }\n\n              var umbrellaNav = $rootUmbrellaDiv.is(\":visible\");\n\n              if (umbrellaNav) {\n                var $activeUmbrellaDrillDown = $rootDrillDownNavUmbrella\n                  .find(\".drilldown-menu.active\")\n                  .children(\".menu-back\");\n                if ($activeUmbrellaDrillDown.length) {\n                  $activeUmbrellaDrillDown.focus();\n                  return;\n                }\n\n                var $firstMenuItem = $rootDrillDownNavUmbrella.find(\n                  \".drill-down-list-item:first\"\n                );\n\n                if ($firstMenuItem.find(\".drilldown-menu\").length) {\n                  $firstMenuItem.find(\".drill-down-parent\").focus();\n                  return;\n                }\n\n                $firstMenuItem.find(\"a\").focus();\n                return;\n              }\n\n              var $activeMainDrillDown = $rootDrillDownNavMain\n                .find(\".drilldown-menu.active\")\n                .children(\".menu-back\");\n              if ($activeMainDrillDown.length) {\n                $activeMainDrillDown.focus();\n                return;\n              }\n\n              var $firstMenuItem = $rootDrillDownNavMain.find(\n                \".drill-down-list-item:first\"\n              );\n\n              if ($firstMenuItem.find(\".drilldown-menu\").length) {\n                $firstMenuItem.find(\".drill-down-parent\").focus();\n                return;\n              }\n\n              $firstMenuItem.find(\"a\").focus();\n\n              return;\n            });\n        });\n\n      function resizeRootDrillDown() {\n        var $umbrellaActiveDrillDown = $rootDrillDownNavUmbrella.find(\n            \".drilldown-menu.active\"\n          ),\n          $mainActiveDrillDown = $rootDrillDownNavMain.find(\n            \".drilldown-menu.active\"\n          ),\n          umbrellaActiveDrillDownParents =\n            $umbrellaActiveDrillDown.parents(\".drilldown-menu\").length,\n          mainActiveDrillDownParents =\n            $mainActiveDrillDown.parents(\".drilldown-menu\").length;\n\n        if ($(window).width() < 600) {\n          menuWidth = 350;\n        } else {\n          menuWidth = 410;\n        }\n\n        if ($umbrellaActiveDrillDown.length) {\n          if (umbrellaActiveDrillDownParents) {\n            $rootDrillDownNavUmbrella.css({\n              transform:\n                \"translateX(-\" +\n                menuWidth * 2 * umbrellaActiveDrillDownParents +\n                \"px\",\n            });\n          } else {\n            $rootDrillDownNavUmbrella.css({\n              transform: \"translateX(-\" + menuWidth + \"px\",\n            });\n          }\n        }\n\n        if ($mainActiveDrillDown.length) {\n          if (mainActiveDrillDownParents) {\n            $rootDrillDownNavMain.css({\n              transform:\n                \"translateX(-\" +\n                menuWidth * 2 * mainActiveDrillDownParents +\n                \"px\",\n            });\n          } else {\n            $rootDrillDownNavMain.css({\n              transform: \"translateX(-\" + menuWidth + \"px\",\n            });\n          }\n        }\n      }\n\n      function checkResizeRootDrillDown() {\n        clearTimeout(resizeTimer);\n        resizeTimer = setTimeout(resizeRootDrillDown, 500);\n      }\n\n      function addTopLevelDrillDownClasses() {\n        $rootDrillDownNavMain.children().addClass(\"top-drill-down-list-item\");\n        $rootDrillDownNavUmbrella\n          .children()\n          .addClass(\"top-drill-down-list-item\");\n      }\n\n      addTopLevelDrillDownClasses();\n      selectLastDrillDownElement();\n      moveToCurrentSetHeight();\n\n      // Restructures toggle DOM order for immediate tabindex after Uninav. Remains the same visually.\n      $(\".uninav__umbrella-nav-button-container\")\n        .detach()\n        .appendTo(\"nav#uninav\");\n\n      var $offCanvasNavContainer = $(\"#uninav .off-canvas-nav-container\"),\n        menuVisibleXVal = 0,\n        menuWidth = $(window).width() > 600 ? 410 : 350,\n        $rootUmbrellaDiv = $(\"#uninav #off-canvas-umbrella\"),\n        $rootMainDiv = $(\"#uninav #off-canvas-main\"),\n        $rootDrillDownNavUmbrella = $(\n          \"#off-canvas-umbrella-navigation .root-umbrella-nav\"\n        ),\n        $rootDrillDownNavMain = $(\"#off-canvas-main-navigation .root-main-nav\"),\n        $rootElement = $(\".off-canvas-nav-container\"),\n        translateXVal = menuWidth,\n        headerHeight =\n          $(\"#uninav .cu-off-canvas-header\").height() +\n          $(\"#uninav .menu-header\").height(),\n        $sectionMenuButton = $(\n          \"#uninav .uninav__umbrella-nav-button-container button\"\n        ),\n        $offCanvasOverlay = $(\".off-canvas-overlay#js-off-canvas-overlay\"),\n        resizeTimer = null;\n\n      $(window).resize(checkResizeRootDrillDown);\n\n      $rootDrillDownNavMain.currentWidth = menuWidth;\n      $rootDrillDownNavUmbrella.currentWidth = menuWidth;\n\n      $sectionMenuButton.on(\"click\", function () {\n        $offCanvasNavContainer.css({\n          transform: \"translateX(\" + menuVisibleXVal + \"px)\",\n          visibility: \"visible\",\n        });\n        $offCanvasOverlay.show();\n\n        // shift focus\n        setTimeout(function () {\n          $(\"#js-off-canvas-nav-container #main-logo a\").focus();\n        }, 100);\n      });\n\n      $(window).on(\"scroll\", setSectionMenuButtonSize);\n\n      //CLOSE OFF-CANVAS-NAV\n      $offCanvasNavContainer\n        .find(\".close.js-close-off-canvas-nav\")\n        .on(\"click\", function () {\n          $offCanvasNavContainer.css({\n            transform: \"translateX(-\" + menuWidth + \"px)\",\n            visibility: \"hidden\",\n          });\n          $offCanvasOverlay.hide();\n\n          setTimeout(function () {\n            $(\"#main a\").first().focus();\n          }, 1000);\n        });\n\n      $offCanvasNavContainer\n        .find(\".close.js-close-off-canvas-nav\")\n        .on(\"keydown\", function (e) {\n          if (e.key === \"Enter\" || e.key === \" \") {\n            e.preventDefault();\n            $offCanvasNavContainer.css({\n              transform: \"translateX(-\" + menuWidth + \"px)\",\n              visibility: \"hidden\",\n            });\n            $offCanvasOverlay.hide();\n\n            setTimeout(function () {\n              $(\"#main a\").first().focus();\n            }, 1000);\n          }\n        });\n\n      $rootUmbrellaDiv.find(\".toggle-menu-label\").on(\"click\", function () {\n        changeContextualMenus($(this));\n      });\n\n      $rootMainDiv.find(\".toggle-menu-label\").on(\"click\", function () {\n        changeContextualMenus($(this));\n      });\n\n      $rootUmbrellaDiv.find(\".toggle-menu-label\").on(\"keydown\", function (e) {\n        if (e.key === \"Enter\" || e.key === \" \") {\n          e.preventDefault();\n          changeContextualMenus($(this));\n        }\n      });\n\n      $rootMainDiv.find(\".toggle-menu-label\").on(\"keydown\", function (e) {\n        if (e.key === \"Enter\" || e.key === \" \") {\n          e.preventDefault();\n          changeContextualMenus($(this));\n        }\n      });\n\n      $(\"#uninav .uninav__hamburger-menu .hamburger-menu-button\").on(\n        \"click\",\n        function (e) {\n          e.preventDefault();\n          $offCanvasNavContainer.css({\n            transform: \"translateX(\" + menuVisibleXVal + \"px)\",\n            visibility: \"visible\",\n          });\n\n          $offCanvasOverlay.show();\n        }\n      );\n\n      $(\"#uninav .uninav__hamburger-menu .hamburger-menu-button\").on(\n        \"keydown\",\n        function (e) {\n          if (e.key === \"Enter\" || e.key === \" \") {\n            e.preventDefault();\n            $offCanvasNavContainer.css({\n              transform: \"translateX(\" + menuVisibleXVal + \"px)\",\n              visibility: \"visible\",\n            });\n\n            $offCanvasOverlay.show();\n          }\n        }\n      );\n\n      $rootMainDiv.find(\".menu-header .menu-label\").on(\"click\", function () {\n        moveOffCanvasToRoot($(this));\n      });\n\n      $rootUmbrellaDiv\n        .find(\".menu-header .menu-label\")\n        .on(\"click\", function () {\n          moveOffCanvasToRoot($(this));\n        });\n\n      $rootMainDiv.find(\".menu-header .menu-label\").on(\"keydown\", function (e) {\n        if (e.key === \"Enter\" || e.key === \" \") {\n          e.preventDefault();\n          moveOffCanvasToRoot($(this));\n        }\n      });\n\n      $rootUmbrellaDiv\n        .find(\".menu-header .menu-label\")\n        .on(\"keydown\", function (e) {\n          if (e.key === \"Enter\" || e.key === \" \") {\n            e.preventDefault();\n            moveOffCanvasToRoot($(this));\n          }\n        });\n\n      $offCanvasOverlay.on(\"click\", function () {\n        $offCanvasNavContainer.css({\n          transform: \"translateX(-\" + menuWidth + \"px)\",\n          visibility: \"hidden\",\n        });\n        $(this).hide();\n      });\n\n      $rootDrillDownNavUmbrella.on(\n        \"click\",\n        \".drill-down-parent\",\n        drillMenuDown\n      );\n\n      $rootDrillDownNavMain.on(\"click\", \".drill-down-parent\", drillMenuDown);\n\n      $rootDrillDownNavUmbrella.on(\"click\", \".toggle-drilldown\", drillMenuDown);\n\n      $rootDrillDownNavMain.on(\"click\", \".toggle-drilldown\", drillMenuDown);\n\n      $rootDrillDownNavUmbrella.on(\"click\", \".menu-back\", drillMenuUp);\n\n      $rootDrillDownNavMain.on(\"click\", \".menu-back\", drillMenuUp);\n\n      $rootDrillDownNavUmbrella.on(\n        \"keydown\",\n        \".drill-down-parent\",\n        function (e) {\n          if (e.key === \"Enter\" || e.key === \" \") {\n            e.preventDefault();\n            var $nextTabableItem = $(this)\n              .siblings(\".drilldown-menu\")\n              .children(\".menu-back\");\n            var drillDown = drillMenuDown.bind(this);\n\n            drillDown();\n\n            //REASON FOR SET TIMEOUT SEE THIS SO\n            //https://stackoverflow.com/questions/3580068/is-settimeout-with-no-delay-the-same-as-executing-the-function-instantly/3580703#3580703\n            setTimeout(function () {\n              $nextTabableItem.focus();\n            }, 500);\n            return;\n          }\n        }\n      );\n\n      $rootDrillDownNavMain.on(\"keydown\", \".drill-down-parent\", function (e) {\n        if (e.key === \"Enter\" || e.key === \" \") {\n          e.preventDefault();\n          var $nextTabableItem = $(this)\n            .siblings(\".drilldown-menu\")\n            .children(\".menu-back\");\n          var drillDown = drillMenuDown.bind(this);\n\n          drillDown();\n\n          //REASON FOR SET TIMEOUT SEE THIS SO\n          //https://stackoverflow.com/questions/3580068/is-settimeout-with-no-delay-the-same-as-executing-the-function-instantly/3580703#3580703\n          setTimeout(function () {\n            $nextTabableItem.focus();\n          }, 500);\n          return;\n        }\n      });\n\n      $rootDrillDownNavUmbrella.on(\"keydown\", \".menu-back\", function (e) {\n        if (e.key === \"Enter\" || e.key === \" \") {\n          e.preventDefault();\n          var $nextTabableItem = $(this)\n            .closest(\".drill-down-list-item\")\n            .children(\".drill-down-parent\");\n          var drillup = drillMenuUp.bind(this);\n\n          drillup();\n\n          //REASON FOR SET TIMEOUT SEE THIS SO\n          //https://stackoverflow.com/questions/3580068/is-settimeout-with-no-delay-the-same-as-executing-the-function-instantly/3580703#3580703\n          setTimeout(function () {\n            $nextTabableItem.focus();\n          }, 500);\n          return;\n        }\n      });\n\n      $rootDrillDownNavMain.on(\"keydown\", \".menu-back\", function (e) {\n        if (e.key === \"Enter\" || e.key === \" \") {\n          e.preventDefault();\n          var $nextTabableItem = $(this)\n            .closest(\".drill-down-list-item\")\n            .children(\".drill-down-parent\");\n          var drillup = drillMenuUp.bind(this);\n\n          drillup();\n\n          //REASON FOR SET TIMEOUT SEE THIS SO\n          //https://stackoverflow.com/questions/3580068/is-settimeout-with-no-delay-the-same-as-executing-the-function-instantly/3580703#3580703\n          setTimeout(function () {\n            $nextTabableItem.focus();\n          }, 500);\n          return;\n        }\n      });\n\n      $(\"#off-canvas-umbrella-navigation .root-umbrella-nav .menu-back\").each(\n        function (idx, item) {\n          Mousetrap(item).bind(\"shift+tab\", function (e) {\n            var currentMenuBack = $(document.activeElement);\n            var drillUp = drillMenuUp.bind(currentMenuBack);\n            drillUp();\n          });\n        }\n      );\n\n      $(\"#off-canvas-main-navigation .root-main-nav .menu-back\").each(function (\n        idx,\n        item\n      ) {\n        Mousetrap(item).bind(\"shift+tab\", function (e) {\n          var currentMenuBack = $(document.activeElement);\n          var drillUp = drillMenuUp.bind(currentMenuBack);\n          drillUp();\n        });\n      });\n\n      function changeContextualMenus($element) {\n        var $otherContextualMenu = $element\n            .parents(\".off-canvas-menu\")\n            .siblings(\".off-canvas-menu\"),\n          $currentContextualMenu = $element.parents(\".off-canvas-menu\"),\n          $activeDrillDownMenu = $otherContextualMenu.find(\n            \".drilldown-menu.active\"\n          );\n\n        $currentContextualMenu.removeClass(\"slide-in\");\n        $currentContextualMenu.addClass(\"slide-out\");\n        $otherContextualMenu.show();\n        $otherContextualMenu.removeClass(\"slide-out\");\n        $otherContextualMenu.addClass(\"slide-in\");\n\n        if (!$activeDrillDownMenu.length) {\n          if (!$rootDrillDownNavMain.initialHeight)\n            $rootDrillDownNavMain.initialHeight = $(\".root-main-nav\").height();\n\n          if (!$rootDrillDownNavUmbrella.initialHeight)\n            $rootDrillDownNavUmbrella.initialHeight =\n              $(\".root-umbrella-nav\").height();\n\n          if ($otherContextualMenu.find(\".root-umbrella-nav\").length) {\n            if (\n              $rootDrillDownNavUmbrella.initialHeight + headerHeight >=\n              $(window).height()\n            ) {\n              $rootElement.css({\n                overflowY: \"scroll\",\n              });\n            } else {\n              $rootElement.css({\n                overflowY: \"hidden\",\n              });\n            }\n            $rootDrillDownNavUmbrella.css({\n              height: $rootDrillDownNavUmbrella.initialHeight,\n            });\n          } else {\n            if (\n              $rootDrillDownNavMain.initialHeight + headerHeight >=\n              $(window).height()\n            ) {\n              $rootElement.css({\n                overflowY: \"scroll\",\n              });\n            } else {\n              $rootElement.css({\n                overflowY: \"hidden\",\n              });\n            }\n            $rootDrillDownNavMain.css({\n              height: $rootDrillDownNavMain.initialHeight,\n            });\n          }\n\n          setTimeout(function () {\n            $currentContextualMenu.hide();\n          }, 500);\n\n          return;\n        }\n\n        if (\n          $activeDrillDownMenu.height() + headerHeight >=\n          $(window).height()\n        ) {\n          $rootElement.css({\n            overflowY: \"scroll\",\n          });\n        } else {\n          $rootElement.css({\n            overflowY: \"hidden\",\n          });\n        }\n\n        setTimeout(function () {\n          $currentContextualMenu.hide();\n        }, 500);\n\n        return;\n      }\n\n      function moveOffCanvasToRoot(element) {\n        if (element.parents(\"#off-canvas-umbrella\").length === 1) {\n          $rootDrillDownNavUmbrella\n            .find(\".drilldown-menu.active\")\n            .removeClass(\"active\");\n          $rootUmbrellaDiv.find(\".root-umbrella-nav\").css({\n            transform: \"translateX(-\" + menuVisibleXVal + \"px\",\n          });\n          $rootUmbrellaDiv.find(\".drilldown-menu\").hide();\n          $rootDrillDownNavUmbrella.removeClass(\"drilled-down\");\n\n          if (\n            $rootDrillDownNavUmbrella.initialHeight + headerHeight >=\n            $(window).height()\n          ) {\n            $rootElement.css({\n              overflowY: \"scroll\",\n            });\n          } else {\n            $rootElement.css({\n              overflowY: \"hidden\",\n            });\n          }\n\n          $rootDrillDownNavUmbrella.css({\n            height: $rootDrillDownNavUmbrella.initialHeight,\n          });\n          return;\n        }\n        $rootDrillDownNavMain\n          .find(\".drilldown-menu.active\")\n          .removeClass(\"active\");\n        $rootMainDiv.find(\".root-main-nav\").css({\n          transform: \"translateX(-\" + menuVisibleXVal + \"px\",\n        });\n        $rootMainDiv.find(\".drilldown-menu\").hide();\n        $rootDrillDownNavMain.removeClass(\"drilled-down\");\n\n        if (\n          $rootDrillDownNavMain.height() + headerHeight >=\n          $(window).height()\n        ) {\n          $rootElement.css({\n            overflowY: \"scroll\",\n          });\n        } else {\n          $rootElement.css({\n            overflowY: \"hidden\",\n          });\n        }\n\n        $rootDrillDownNavMain.css({\n          height: $rootDrillDownNavMain.initialHeight,\n        });\n        return;\n      }\n\n      function drillMenuDown() {\n        var $menuToDrillDownTo = $(this).siblings(\".drilldown-menu\"),\n          ulCurrentPos = getTranslateXVal($rootDrillDownNavMain),\n          umbrellaDrillDown = $(this).parents(\"#off-canvas-umbrella\").length,\n          translateXVal = ulCurrentPos - menuWidth;\n\n        if (umbrellaDrillDown) {\n          (ulCurrentPos = getTranslateXVal($rootDrillDownNavUmbrella)),\n            (translateXVal = ulCurrentPos - menuWidth);\n          $rootDrillDownNavUmbrella.addClass(\"drilled-down\");\n          $rootDrillDownNavUmbrella\n            .find(\".drilldown-menu.active\")\n            .removeClass(\"active\");\n          $menuToDrillDownTo.addClass(\"active\");\n\n          $menuToDrillDownTo.show();\n          $rootElement.animate({\n            scrollTop: 0,\n          });\n          $rootDrillDownNavUmbrella.css({\n            transform: \"translateX(\" + translateXVal + \"px)\",\n          });\n\n          $rootDrillDownNavUmbrella.css({\n            height: $menuToDrillDownTo.height(),\n          });\n\n          if ($menuToDrillDownTo.height() + headerHeight > $(window).height()) {\n            $rootElement.css({\n              overflowY: \"scroll\",\n            });\n            return;\n          }\n\n          $rootElement.css({\n            overflowY: \"hidden\",\n          });\n\n          return;\n        }\n\n        $rootDrillDownNavMain\n          .find(\".drilldown-menu.active\")\n          .removeClass(\"active\");\n        $menuToDrillDownTo.addClass(\"active\");\n        $menuToDrillDownTo.show();\n        $rootDrillDownNavMain.css({\n          transform: \"translateX(\" + translateXVal + \"px)\",\n        });\n        $rootDrillDownNavMain.addClass(\"drilled-down\");\n        $rootElement.animate(\n          {\n            scrollTop: 0,\n          },\n          \"slow\"\n        );\n        if ($menuToDrillDownTo.height() + headerHeight > $(window).height()) {\n          $rootElement.css({\n            overflowY: \"scroll\",\n          });\n          return;\n        }\n\n        $rootElement.css({\n          overflowY: \"hidden\",\n        });\n        return;\n      }\n\n      function drillMenuUp() {\n        var umbrellaDrillDown = $(this).parents(\"#off-canvas-umbrella\").length,\n          ulCurrentPos = getTranslateXVal($rootDrillDownNavMain),\n          translateXVal = ulCurrentPos + menuWidth,\n          $parentDrillDownMenu = $(this)\n            .closest(\".drill-down-list-item\")\n            .closest(\".drilldown-menu\");\n\n        if (umbrellaDrillDown) {\n          $rootDrillDownNavUmbrella\n            .find(\".drilldown-menu.active\")\n            .removeClass(\"active\");\n          $parentDrillDownMenu.addClass(\"active\");\n          (ulCurrentPos = getTranslateXVal($rootDrillDownNavUmbrella)),\n            (translateXVal = ulCurrentPos + menuWidth);\n\n          if (translateXVal === 0) {\n            $rootDrillDownNavUmbrella.removeClass(\"drilled-down\");\n          }\n\n          $rootDrillDownNavUmbrella.css({\n            transform: \"translateX(\" + translateXVal + \"px)\",\n          });\n\n          $(this).parent().hide();\n\n          if (translateXVal == 0) {\n            $rootDrillDownNavUmbrella.css({\n              height: $rootDrillDownNavUmbrella.initialHeight,\n            });\n\n            if (\n              $rootDrillDownNavUmbrella.initialHeight + headerHeight >=\n              $(window).height()\n            ) {\n              $rootElement.css({\n                overflowY: \"scroll\",\n              });\n            } else {\n              $rootElement.css({\n                overflowY: \"hidden\",\n              });\n            }\n\n            return;\n          }\n\n          $rootDrillDownNavUmbrella.css({\n            height: $parentDrillDownMenu.height(),\n          });\n\n          if (\n            $parentDrillDownMenu.height() + headerHeight >=\n            $(window).height()\n          ) {\n            $rootElement.css({\n              overflowY: \"scroll\",\n            });\n          } else {\n            $rootElement.css({\n              overflowY: \"hidden\",\n            });\n          }\n\n          return;\n        }\n\n        if (translateXVal === 0) {\n          $rootDrillDownNavMain.removeClass(\"drilled-down\");\n        }\n\n        $rootDrillDownNavMain\n          .find(\".drilldown-menu.active\")\n          .removeClass(\"active\");\n        $parentDrillDownMenu.addClass(\"active\");\n        $rootDrillDownNavMain.css({\n          transform: \"translateX(\" + translateXVal + \"px)\",\n        });\n        $(this).parent().hide();\n\n        if (translateXVal == 0) {\n          $rootDrillDownNavMain.css({\n            height: $rootDrillDownNavMain.initialHeight,\n          });\n\n          if (\n            $rootDrillDownNavUmbrella.initialHeight + headerHeight >=\n            $(window).height()\n          ) {\n            $rootElement.css({\n              overflowY: \"scroll\",\n            });\n          } else {\n            $rootElement.css({\n              overflowY: \"hidden\",\n            });\n          }\n\n          return;\n        }\n\n        if (\n          $rootDrillDownNavMain.initialHeight + headerHeight >=\n          $(window).height()\n        )\n          $rootElement.css({\n            overflowY: \"scroll\",\n          });\n\n        $rootDrillDownNavMain.css({\n          height: $parentDrillDownMenuHeight,\n        });\n\n        return;\n      }\n\n      function getTranslateXVal(selector) {\n        var transformMatrix =\n          selector.css(\"-webkit-transform\") ||\n          selector.css(\"-moz-transform\") ||\n          selector.css(\"-ms-transform\") ||\n          selector.css(\"-o-transform\") ||\n          selector.css(\"transform\");\n\n        transformMatrix = transformMatrix === \"none\" ? 0 : transformMatrix;\n        if (!isNaN(transformMatrix)) return 0;\n\n        var matrix = transformMatrix.replace(/[^0-9\\-.,]/g, \"\").split(\",\");\n        var x = matrix[12] || matrix[4]; //translate x\n\n        return parseInt(x);\n      }\n\n      function moveToCurrentSetHeight() {\n        var currentPath = $rootElement.find(\"li.current\"),\n          umbrellaNav = $rootDrillDownNavUmbrella.length,\n          $currentPathDrillDownMenu = currentPath.parent(\".drilldown-menu\");\n\n        if (currentPath.length) {\n          $currentPathDrillDownMenu.addClass(\"active\");\n          var $drillDownParents = currentPath.parents(\"ul.drilldown-menu\"),\n            umbrellaDrillDown = currentPath.parents(\n              \"#off-canvas-umbrella\"\n            ).length;\n\n          $drillDownParents.show();\n          $rootDrillDownNavUmbrella.initialHeight =\n            $(\".root-umbrella-nav\").height();\n\n          if (umbrellaDrillDown) {\n            $rootUmbrellaDiv.show();\n            $rootMainDiv.hide();\n\n            $rootDrillDownNavUmbrella.css({\n              transform:\n                \"translateX(-\" + menuWidth * $drillDownParents.length + \"px\",\n            });\n            $rootMainDiv.css({\n              transform: \"translateX(-\" + menuWidth + \"px\",\n            });\n\n            if ($currentPathDrillDownMenu.length) {\n              $rootDrillDownNavUmbrella.addClass(\"drilled-down\");\n              if (\n                $currentPathDrillDownMenu.height() + headerHeight >=\n                $(window).height()\n              ) {\n                $rootElement.css({\n                  overflowY: \"scroll\",\n                });\n              } else {\n                $rootElement.css({\n                  overflowY: \"hidden\",\n                });\n              }\n            } else {\n              if (\n                $rootDrillDownNavUmbrella.initialHeight + headerHeight >=\n                $(window).height()\n              ) {\n                $rootElement.css({\n                  overflowY: \"scroll\",\n                });\n              } else {\n                $rootElement.css({\n                  overflowY: \"hidden\",\n                });\n              }\n            }\n\n            return;\n          }\n\n          $rootMainDiv.show();\n          $rootUmbrellaDiv.hide();\n          $rootDrillDownNavMain.initialHeight =\n            $(\".root-umbrella-nav\").height();\n          $rootDrillDownNavMain.css({\n            transform:\n              \"translateX(-\" + menuWidth * 2 * $drillDownParents.length + \"px\",\n          });\n          $rootUmbrellaDiv.css({\n            transform: \"translateX(-\" + menuWidth + \"px\",\n          });\n\n          if ($currentPathDrillDownMenu.length) {\n            $rootDrillDownNavMain.addClass(\"drilled-down\");\n            if (\n              $currentPathDrillDownMenu.height() + headerHeight >=\n              $(window).height()\n            ) {\n              $rootElement.css({\n                overflowY: \"scroll\",\n              });\n            } else {\n              $rootElement.css({\n                overflowY: \"hidden\",\n              });\n            }\n          } else {\n            if (\n              $rootDrillDownNavMain.initialHeight + headerHeight >=\n              $(window).height()\n            ) {\n              $rootElement.css({\n                overflowY: \"scroll\",\n              });\n            } else {\n              $rootElement.css({\n                overflowY: \"hidden\",\n              });\n            }\n          }\n          return;\n        }\n\n        if (umbrellaNav) {\n          $rootDrillDownNavUmbrella.initialHeight =\n            $(\".root-umbrella-nav\").height();\n\n          if (\n            $rootDrillDownNavUmbrella.initialHeight + headerHeight >=\n            $(window).height()\n          ) {\n            $rootElement.css({\n              overflowY: \"scroll\",\n            });\n          } else {\n            $rootElement.css({\n              overflowY: \"hidden\",\n            });\n          }\n          return;\n        }\n\n        $rootDrillDownNavMain.initialHeight = $(\".root-main-nav\").height();\n\n        if (\n          $rootDrillDownNavMain.initialHeight + headerHeight >=\n          $(window).height()\n        ) {\n          $rootElement.css({\n            overflowY: \"scroll\",\n          });\n        } else {\n          $rootElement.css({\n            overflowY: \"hidden\",\n          });\n        }\n\n        return;\n      }\n\n      function setSectionMenuButtonSize() {\n        var scrollThreshHold = 0.2 * $(window).height();\n\n        if (\n          $(window).scrollTop() < scrollThreshHold &&\n          $sectionMenuButton.hasClass(\"section-menu-small\")\n        ) {\n          $(\".section-menu-text\").show();\n          $(\".section-menu-hamburger-icon\").hide();\n          $sectionMenuButton.removeClass(\"section-menu-small\");\n          return;\n        }\n\n        if (\n          $(window).scrollTop() > scrollThreshHold &&\n          !$sectionMenuButton.hasClass(\"section-menu-small\")\n        ) {\n          $(\".section-menu-hamburger-icon\").show();\n          $(\".section-menu-text\").hide();\n          $sectionMenuButton.addClass(\"section-menu-small\");\n        }\n      }\n\n      function selectLastDrillDownElement() {\n        var $umbrellaLastItem = $(\n            \"#js-off-canvas-nav-container *[tabindex]:visible\"\n          ).last(),\n          $mainLastItem = $(\".off-canvas-utility *[tabindex]:visible\").last(),\n          $umbrellaDrillDownMenus =\n            $rootDrillDownNavUmbrella.find(\".drilldown-menu\"),\n          $mainDrillDownMenus = $rootDrillDownNavMain.find(\".drilldown-menu\");\n\n        $umbrellaDrillDownMenus.each(function (idx, drillDownMenu) {\n          $(drillDownMenu)\n            .children(\":last-child\")\n            .off(\"focusin\")\n            .on(\"focusin\", function (e) {\n              var drilldown = null,\n                self = this,\n                eventListeners = {\n                  click: false,\n                  shiftTab: false,\n                };\n\n              $(document)\n                .off(\"click\")\n                .on(\"click\", function (e) {\n                  e.stopPropagation();\n                  $(document).off(\"click\");\n                  eventListeners.click = true;\n                });\n\n              $(this)\n                .off(\"focusout\")\n                .on(\"focusout\", function (e) {\n                  e.stopPropagation();\n\n                  var $menuBack = $(this).siblings(\".menu-back\");\n\n                  drilldown = setTimeout(function () {\n                    if ($(self).find(\".active\").length) {\n                      return;\n                    }\n\n                    if (!e.relatedTarget) {\n                      return;\n                    }\n\n                    if (eventListeners.shiftTab) {\n                      return;\n                    }\n\n                    if (eventListeners.click) {\n                      return;\n                    }\n                    $(document.activeElement).blur();\n                    drillMenuUp.call($menuBack);\n                    $(self)\n                      .parent()\n                      .closest(\".drill-down-list-item\")\n                      .children(\".drill-down-parent\")\n                      .focus();\n                    return;\n                  }, 500);\n\n                  return;\n                });\n\n              Mousetrap(this).bind(\"shift+tab\", function (e) {\n                e.stopPropagation();\n                Mousetrap.unbind(\"shift+tab\");\n\n                eventListeners.shiftTab = true;\n              });\n            });\n        });\n\n        $mainDrillDownMenus.each(function (idx, drillDownMenu) {\n          $(drillDownMenu)\n            .children(\":last-child\")\n            .off(\"focusin\")\n            .on(\"focusin\", function (e) {\n              var drilldown = null,\n                self = this,\n                eventListeners = {\n                  click: false,\n                  shiftTab: false,\n                };\n\n              $(document)\n                .off(\"click\")\n                .on(\"click\", function (e) {\n                  e.stopPropagation();\n                  $(document).off(\"click\");\n                  eventListeners.click = true;\n                });\n\n              $(this)\n                .off(\"focusout\")\n                .on(\"focusout\", function (e) {\n                  e.stopPropagation();\n\n                  var $menuBack = $(this).siblings(\".menu-back\");\n\n                  drilldown = setTimeout(function () {\n                    if ($(self).find(\".active\").length) {\n                      return;\n                    }\n\n                    if (!e.relatedTarget) {\n                      return;\n                    }\n\n                    if (eventListeners.shiftTab) {\n                      return;\n                    }\n\n                    if (eventListeners.click) {\n                      return;\n                    }\n                    $(document.activeElement).blur();\n                    drillMenuUp.call($menuBack);\n                    $(self)\n                      .parent()\n                      .closest(\".drill-down-list-item\")\n                      .children(\".drill-down-parent\")\n                      .focus();\n                    return;\n                  }, 500);\n\n                  return;\n                });\n\n              Mousetrap(this).bind(\"shift+tab\", function (e) {\n                e.stopPropagation();\n                Mousetrap.unbind(\"shift+tab\");\n\n                eventListeners.shiftTab = true;\n              });\n            });\n        });\n\n        $umbrellaLastItem.on(\"keydown\", function (e) {\n          if (e.key === \"Tab\") {\n            if (e.shiftKey) {\n              return;\n            }\n\n            $offCanvasNavContainer.css({\n              transform: \"translateX(-\" + menuWidth + \"px)\",\n              visibility: \"hidden\",\n            });\n            $offCanvasOverlay.hide();\n            focusMainContent();\n          }\n        });\n\n        $mainLastItem.on(\"keydown\", function (e) {\n          if (e.key === \"Tab\") {\n            if (e.shiftKey) {\n              return;\n            }\n\n            $offCanvasNavContainer.css({\n              transform: \"translateX(-\" + menuWidth + \"px)\",\n              visibility: \"hidden\",\n            });\n            $offCanvasOverlay.hide();\n            focusMainContent();\n          }\n        });\n      }\n\n      $(\".off-canvas-utility\").on(\"focusin\", function (e) {\n        console.log(\"focus\");\n\n        $(\".off-canvas-utility\")\n          .find(\"*[tabindex]:visible\")\n          .last()\n          .on(\"keydown\", function (e) {\n            if (e.key === \"Tab\") {\n              console.log(\"tab\");\n              if (e.shiftKey) {\n                return;\n              }\n\n              console.log(\"focus out\");\n              $offCanvasNavContainer.css({\n                transform: \"translateX(-\" + menuWidth + \"px)\",\n                visibility: \"hidden\",\n              });\n              $offCanvasOverlay.hide();\n              focusMainContent();\n            }\n          });\n      });\n\n      // $('.off-canvas-utility').find('*[tabindex]:visible').last().on(\"focusin\", function (e) {\n      //   console.log('focus')\n\n      // })\n\n      $offCanvasNavContainer\n        .find(\".toggle-menu-label\")\n        .off(\"focusin\")\n        .on(\"focusin\", function () {\n          var eventListeners = {\n            shiftTab: false,\n          };\n\n          Mousetrap(this).bind(\"shift+tab\", function (e) {\n            Mousetrap.unbind(\"shift+tab\");\n            eventListeners.shiftTab = true;\n            return;\n          });\n\n          $(this)\n            .off(\"focusout\")\n            .on(\"focusout\", function () {\n              if (eventListeners.shiftTab === true) {\n                eventListeners.shiftTab = false;\n                return;\n              }\n\n              var umbrellaNav = $rootUmbrellaDiv.is(\":visible\");\n\n              if (umbrellaNav) {\n                var $activeUmbrellaDrillDown = $rootDrillDownNavUmbrella\n                  .find(\".drilldown-menu.active\")\n                  .children(\".menu-back\");\n                if ($activeUmbrellaDrillDown.length) {\n                  $activeUmbrellaDrillDown.focus();\n                  return;\n                }\n\n                var $firstMenuItem = $rootDrillDownNavUmbrella.find(\n                  \".drill-down-list-item:first\"\n                );\n\n                if ($firstMenuItem.find(\".drilldown-menu\").length) {\n                  $firstMenuItem.find(\".drill-down-parent\").focus();\n                  return;\n                }\n\n                $firstMenuItem.find(\"a\").focus();\n                return;\n              }\n\n              var $activeMainDrillDown = $rootDrillDownNavMain\n                .find(\".drilldown-menu.active\")\n                .children(\".menu-back\");\n              if ($activeMainDrillDown.length) {\n                $activeMainDrillDown.focus();\n                return;\n              }\n\n              var $firstMenuItem = $rootDrillDownNavMain.find(\n                \".drill-down-list-item:first\"\n              );\n\n              if ($firstMenuItem.find(\".drilldown-menu\").length) {\n                $firstMenuItem.find(\".drill-down-parent\").focus();\n                return;\n              }\n\n              $firstMenuItem.find(\"a\").focus();\n\n              return;\n            });\n        });\n\n      function resizeRootDrillDown() {\n        var $umbrellaActiveDrillDown = $rootDrillDownNavUmbrella.find(\n            \".drilldown-menu.active\"\n          ),\n          $mainActiveDrillDown = $rootDrillDownNavMain.find(\n            \".drilldown-menu.active\"\n          ),\n          umbrellaActiveDrillDownParents =\n            $umbrellaActiveDrillDown.parents(\".drilldown-menu\").length,\n          mainActiveDrillDownParents =\n            $mainActiveDrillDown.parents(\".drilldown-menu\").length;\n\n        if ($(window).width() < 600) {\n          menuWidth = 350;\n        } else {\n          menuWidth = 410;\n        }\n\n        if ($umbrellaActiveDrillDown.length) {\n          if (umbrellaActiveDrillDownParents) {\n            $rootDrillDownNavUmbrella.css({\n              transform:\n                \"translateX(-\" +\n                menuWidth * 2 * umbrellaActiveDrillDownParents +\n                \"px\",\n            });\n          } else {\n            $rootDrillDownNavUmbrella.css({\n              transform: \"translateX(-\" + menuWidth + \"px\",\n            });\n          }\n        }\n\n        if ($mainActiveDrillDown.length) {\n          if (mainActiveDrillDownParents) {\n            $rootDrillDownNavMain.css({\n              transform:\n                \"translateX(-\" +\n                menuWidth * 2 * mainActiveDrillDownParents +\n                \"px\",\n            });\n          } else {\n            $rootDrillDownNavMain.css({\n              transform: \"translateX(-\" + menuWidth + \"px\",\n            });\n          }\n        }\n      }\n\n      function checkResizeRootDrillDown() {\n        clearTimeout(resizeTimer);\n        resizeTimer = setTimeout(resizeRootDrillDown, 500);\n      }\n\n      function addTopLevelDrillDownClasses() {\n        $rootDrillDownNavMain.children().addClass(\"top-drill-down-list-item\");\n        $rootDrillDownNavUmbrella\n          .children()\n          .addClass(\"top-drill-down-list-item\");\n      }\n\n      addTopLevelDrillDownClasses();\n      selectLastDrillDownElement();\n      moveToCurrentSetHeight();\n\n      function focusMainContent() {\n        var scrollTarget = $(\"#main\").length\n          ? $(\"#main\").first()\n          : $(\"h1\").first();\n        if (scrollTarget.is(\":hidden\")) {\n          if ($(\"#scrollToMe\").length == 0) {\n            scrollTarget.after(\"<div id='scrollToMe'></div>\");\n          }\n          scrollTarget = $(\"#scrollToMe\");\n        }\n        $(\"html,body\").animate(\n          {\n            scrollTop: scrollTarget.offset().top + 100,\n          },\n          500\n        );\n        scrollTarget\n          .attr(\"tabindex\", -1)\n          .on(\"blur focusout\", function () {\n            // when focus leaves this element, remove the tabindex attribute\n            $(this).removeAttr(\"tabindex\");\n          })\n          .focus(); // focus on the content container\n        return false;\n      }\n      $(\n        '<script async=\"true\" src=\"https://cse.google.com/cse.js?cx=015856566681218627934:2ndbiubovo4\"></script>'\n      ).insertBefore(\"header\");\n    }\n  }\n}\n\nexport default uninav;\n"
        }
    ]
}