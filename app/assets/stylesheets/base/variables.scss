@import "mixins.scss";
$uninav-div-height: 60px;
$utility-button-width: 60px;
// Colors
/* These are colors commonly found on the site.
Typically, if a color is used more than once or twice,
it should be added here as a variable. Changing the value
of these variables will affect the colors sitewide. */
$futura-regular: "futura-pt",
Arial,
sans-serif;
$futura: $futura-regular;
$futura-condensed: "futura-pt-condensed",
Arial,
sans-serif;
$arial: Arial,
sans-serif;
$minion: "minion-pro",
Arial,
serif;
$font-stack-body: $arial;
$font-stack-heading: $futura-regular;
$font-stack-heading-emphasis: $futura-condensed;
$cu-red: #a50034;
$cu-red-rgb-transparent: rgba($cu-red, 0.95);
$cu-dark-red: #851c2b;
$white: rgb(255, 255, 255);
$cu-off-white: #f7f6f0;
$cu-light-grey: #eaeaea;
$cu-light-grey-2: #ddd;
$cu-warm-light-grey: #eaeaea;
$cardinal: #a50034;
$cardinal-hover: #810029;
$pillar: #686259;
$panther-black: #231f20;
$pb: $panther-black;
$theme-bg-color-alpha: transparent;
$panther-black: #231f20;
$cu-black: $panther-black;
$content-padding: 2%;
$line-height: 2.4rem;
$red-button-hover: #c8003f;
$red-button-active: #88002b;
$white: #ffffff;
$white-hover: darken($white, 8%);
$brown: #896d49;
$teal: #009CA6;
$pacific: $teal;
$teal-hover: #24d4bf;
$teal2: #02bac2;
$teal2-hover: #01cdd4;
$teal2-light: #a6ddd1;
$red: $cu-red;
$red-secondary: lighten($red, 8%);
$red-tertiary: darken($red, 8%);
$red-hover: #ce0041;
$red-active: #7f0026;
$grey: #2f2f2f;
$grey-hover: #4c4b45;
$grey2: #6e6e66;
$grey2-hover: #918e87;
/* These are colors of common elements or states. */
$cu-font-color: $grey;
$cu-link-hover: #bb223c;
$cu-link-down: $cu-dark-red;
$cu-form-shadow: #797564;
$cu-border: #a58f75;
/* These colors are specifically for the class "newbutton". */
$new-button-primary: $teal2-hover;
$new-button-secondary: $teal2;
$new-button-hover-primary: $teal2-light;
$new-button-hover-secondary: $teal2;
// // Theme Specific Colors
// /* These are theme specific colors. I moved them here
// to make it easier to edit the colors for each theme
// all in one place. Variables prefixed with "theme" are
// colors found in multiple themes. The others are specific
// to a theme. */
$theme-light-grey: #dbdfcf; // Light grey found in multiple themes
$grey-light: #ccc;
$light-grey: $grey-light;
$uninav-light-grey: #ddd;
$theme-yellow: #d4e13c; // Yellow found in multiple themes
$theme-blue: #006185; // Blue found in multiple themes
$asbe-primary: $red;
$asbe-secondary: $red-secondary;
$asbe-tertiary: $red-tertiary;
$education-primary: $red;
$education-secondary: $red-secondary;
$education-tertiary: $red-tertiary;
$communication-primary: $red;
$communication-secondary: $red-secondary;
$communication-tertiary: $red-tertiary;
$copa-primary: $red;
$copa-secondary: $red-secondary;
$copa-tertiary: $red-tertiary;
$crean-primary: $red;
$crean-secondary: $red-secondary;
$crean-tertiary: $red-tertiary;
$dance-primary: $red;
$dance-secondary: $red-secondary;
$dance-tertiary: $red-tertiary;
$dodge-primary: $red;
$dodge-secondary: $red-secondary;
$dodge-tertiary: $red-tertiary;
$music-primary: $red;
$music-secondary: $red-tertiary;
$music-tertiary: $red-secondary;
$pharmacy-primary: $red;
$pharmacy-secondary: $red-secondary;
$pharmacy-tertiary: $red-tertiary;
$scst-primary: $red;
$scst-secondary: $red-secondary;
$scst-tertiary: $red-tertiary;
$theatre-primary: $red;
$theatre-secondary: $red-secondary;
$theatre-tertiary: $red-tertiary;
$wilkinson-primary: $red;
$wilkinson-secondary: $red-secondary;
$wilkinson-tertiary: $red-tertiary;
$law-primary: $cardinal;
$law-secondary: $cardinal-hover;

/* Our Base Spacing Unit: Use multiples of this variable */
$base-spacing: 16px;
$medium-spacing: 20px;

/* Widget specific colors */
$cardinal: #a50034;
$cardinal-alpha: rgba(165, 0, 52, .5);
$pillar: #686259;
$panther-black: #231f20;
$white: rgba(255, 255, 255, 255);
$white-alpha: rgba(255, 255, 240, 0.8);
$white-alpha-50: rgba(255, 255, 240, 0.5);
$panther-black-alpha: rgba($panther-black, 0.8);
$pillar: #686259;
$sand: #f6f2e8;
$sand-alpha: rgba($sand, 0.8);

// spacing
$widget-margin-top: 30px;
$wmtop: $widget-margin-top;
$smallImgSize: 200px;

$red-dots: 2px dotted $cu-red;
/* Omninav height. Be sure to cross reference getOmninavHeight() in omni-nav-2.js if changes are made to the height*/
$omniNavHeightDesktop: 60px;
$omniNavHeightMobile: 123px;
$uninav-total-height: 120px;
$uninav-height-mobile: 60px;

$standardPadding: 5%;
$mastheadTextShadow: rgba(0, 0, 0, 0.5) 6.5px 6.5px 13px;
$mastheadVideoHeight: 600px;

@media only screen and (min-width: 905px) {
  $mastheadVideoHeight: 700px !important;

  :root {
    --space-mastheadVideoHeight: 700px !important;
  }
}

$zIndexTopmost: 9999999999999991;
$uninavZIndex: 999999999999999;
$zIndexMid: 2;
$zIndexBottom: 2;
$zIndexHidden: -999999999999999;
$slate: #666;

/* Borders */
$solid-light-grey-border: 1px solid $cu-light-grey;

$colors: (cu-red: $cu-red,
  cu-red-rgb-transparent: $cu-red-rgb-transparent,
  cu-dark-red: $cu-dark-red,
  cu-off-white: $cu-off-white,
  cu-light-grey: $cu-light-grey,
  cu-light-grey-2: $cu-light-grey-2,
  cu-warm-light-grey: $cu-warm-light-grey,
  cardinal: $cardinal,
  cardinal-hover: $cardinal-hover,
  pillar: $pillar,
  panther-black: $panther-black,
  pb: $panther-black,
  theme-bg-color-alpha: $theme-bg-color-alpha,
  cu-black: $panther-black,
  red-button-hover: $red-button-hover,
  red-button-active: $red-button-active,
  white: $white,
  brown: $brown,
  teal: $teal,
  pacific: $teal,
  teal-hover: $teal-hover,
  teal2: $teal2,
  teal2-hover: $teal2-hover,
  teal2-light: $teal2-light,
  red: $cu-red,
  red-secondary: lighten($red, 8%),
  red-tertiary: darken($red, 8%),
  red-hover: $red-hover,
  red-active: $red-active,
  grey: $grey,
  grey-hover: $grey-hover,
  grey2: $grey2,
  grey2-hover: $grey2-hover,
  white-alpha: $white-alpha,
  white-alpha-50: $white-alpha-50,
  sand: $sand,
  sand-alpha: rgba($sand, 0.8),
  slate: $slate,
  /* These are colors of common elements or states. */
  cu-font-color: $cu-font-color,
  cu-link-hover: $cu-link-hover,
  cu-link-down: $cu-dark-red,
  cu-form-shadow: $cu-form-shadow,
  cu-border: $cu-border,
  /* These colors are specifically for the class "newbutton". */
  new-button-primary: $teal2-hover,
  new-button-secondary: $teal2,
  new-button-hover-primary: $teal2-light,
  new-button-hover-secondary: $teal2,
  // Theme Specific Colors
  /* These are theme specific colors. I moved them here
    to make it easier to edit the colors for each theme
    all in one place. Variables prefixed with "theme" are
    colors found in multiple themes. The others are specific
    to a theme. */
  theme-light-grey: $theme-light-grey, // Light grey found in multiple themes
  grey-light: $grey-light,
  light-grey: $grey-light,
  uninav-light-grey: $uninav-light-grey,
  theme-yellow: $theme-yellow, // Yellow found in multiple themes
  theme-blue: $theme-blue, // Blue found in multiple themes
  asbe-primary: $red,
  asbe-secondary: $red-secondary,
  asbe-tertiary: $red-tertiary,
  education-primary: $red,
  education-secondary: $red-secondary,
  education-tertiary: $red-tertiary,
  communication-primary: $red,
  communication-secondary: $red-secondary,
  communication-tertiary: $red-tertiary,
  copa-primary: $red,
  copa-secondary: $red-secondary,
  copa-tertiary: $red-tertiary,
  crean-primary: $red,
  crean-secondary: $red-secondary,
  crean-tertiary: $red-tertiary,
  dance-primary: $red,
  dance-secondary: $red-secondary,
  dance-tertiary: $red-tertiary,
  dodge-primary: $red,
  dodge-secondary: $red-secondary,
  dodge-tertiary: $red-tertiary,
  music-primary: $red,
  music-secondary: $red-tertiary,
  music-tertiary: $red-secondary,
  pharmacy-primary: $red,
  pharmacy-secondary: $red-secondary,
  pharmacy-tertiary: $red-tertiary,
  scst-primary: $red,
  scst-secondary: $red-secondary,
  scst-tertiary: $red-tertiary,
  theatre-primary: $red,
  theatre-secondary: $red-secondary,
  theatre-tertiary: $red-tertiary,
  wilkinson-primary: $red,
  wilkinson-secondary: $red-secondary,
  wilkinson-tertiary: $red-tertiary,
  law-primary: $cardinal,
  law-secondary: $cardinal-hover,
);

$font: (size: (html: 62.5%,
    body: 1.6rem,
  ),
  leading: (body: 2.4rem),
  family: (futura-regular: $futura-regular,
    futura: $futura-regular,
    futura-condensed: $futura-condensed,
    arial: $arial,
    minion: $minion,
    font-stack-body: $font-stack-body,
    font-stack-heading: $font-stack-heading,
    font-stack-heading-emphasis: $font-stack-heading-emphasis,
  ),
);

$spaces: (uninav-div-height: $uninav-div-height,
  utility-button-width: $utility-button-width,
  base-spacing: $base-spacing,
  widget-margin-top: $widget-margin-top,
  $wmtop: $widget-margin-top,
  omniNavHeightDesktop: $omniNavHeightDesktop,
  omniNavHeightMobile: $omniNavHeightMobile,
  uninav-total-height: $uninav-total-height,
  uninav-height-mobile: $uninav-height-mobile,
  content-padding: $content-padding,
  line-height: $line-height,
  medium-spacing: $medium-spacing,
  zIndexTopmost: $zIndexTopmost,
  smallImgSize: $smallImgSize,
  standardPadding: $standardPadding,
  mastheadVideoHeight: $mastheadVideoHeight);

$borders: (red-dots: $red-dots,
  solid-grey: $solid-light-grey-border,
  medium-solid-panther-black: 3px solid $panther-black,
  cu-red: $cu-red);

$var-maps: (color: $colors,
  font: $font,
  space: $spaces,
  border: $borders);

$props: (background: color,
  background-color: color,
  color: color,
  outline-color: color,
  border: border,
  border-right: border,
  border-top: border,
  border-bottom: border,
  border-left: border,
  margin: space,
  margin-bottom: space,
  margin-top: space,
  margin-right: space,
  padding: space,
  padding-top: space,
  padding-bottom: space,
  padding-right: space,
  padding-left: space,
  height: space,
  width: space,
  font-family: (font, family),
  font-size: (font, size),
  font-weight: (font, weight),
  line-height: (font, leading),
  z-index: space);

// css vars
:root {

  // for each variable map
  @each $var-map-name,
  $var-map in $var-maps {

    // for each variable in the variable map
    @each $var,
    $val in $var-map {

      // if it is a map, go another level deep
      @if type-of($val)==map {

        // each in the map
        @each $var-n,
        $val-n in $val {
          // do the definition
          #{--$var-map-name}-#{$var}-#{$var-n}: $val-n;
        }
      }

      @else {
        // do the definition
        #{--$var-map-name}-#{$var}: $val;
      }
    }
  }
}