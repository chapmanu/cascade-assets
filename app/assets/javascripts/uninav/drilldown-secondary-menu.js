/*
 *   MA5 jquery mobile menu
 *   v4.0.0
 *   GitHub: https://github.com/ma-5/ma5-mobile-menu
 */
function contextualMenu(atributes) {
  // menuDesktop = string, target to desktop menu which will be used for build menu mobile. For example '.site-menu'
  var menuDesktop = '.site-menu';
  if (atributes.menu !== undefined) {
    menuDesktop = atributes.menu;
  }
  // activeClass = string, active class name without dot from active desktop menu <li> or <a>. For example 'active'
  var activeClass = 'active';
  if (atributes.activeClass !== undefined) {
    activeClass = atributes.activeClass;
  }
  // menuTools = string, target to menu tools container which will be used for build menu mobile footer. For example '#scontextualMenu-tools'
  var menuFooter = '#contextualMenu-tools';
  if (atributes.footer !== undefined) {
    menuFooter = atributes.footer;
  }
  if ($(menuDesktop).length > 0) {
    var contextualMenuHtml = '\n' +
      '<!-- ma5-mobile-menu generated by js start -->\n' +
      '<nav id="js-contextualMenu" class="contextualMenu" itemscope itemtype="http://schema.org/SiteNavigationElement">\n' +
      '    <div class="contextualMenu__header">\n' +
      '        <a class="contextualMenu__home" href="/" tabindex="-1">\n' +
      '            <div class="faux-h2">Chapman University</div>\n' +
      '        </a>\n' +
      '        <a class="contextualMenu__toggle" tabindex="-1">\n' +
      '            <span class="contextualMenu__close"><span class="far fa-times-circle"></span></span>\n' +
      '        </a>\n' +
      '    </div>\n' +
      '</nav>\n' +
      '<!-- ma5-mobile-menu generated by js end -->';
    $(menuDesktop).after(contextualMenuHtml);
    $(menuDesktop).clone().attr('id', 'js-contextualMenu-list').appendTo('#js-contextualMenu');
    var menuMobile = $('#js-contextualMenu-list');
    contextualMenuBuilder_clearHTML(menuMobile);
    contextualMenuBuilder_clearAttributes(menuMobile, activeClass);
    contextualMenuBuilder_buildActive(menuMobile, activeClass);
    contextualMenuBuilder_buildLevels($(menuMobile), 0, 'ma5-ul');
  }
  if ($('.contextualMenu').length > 0) {
    var position = 'left';
    if (atributes.position === 'right') {
      position = atributes.position;
    }
    if (atributes.closeOnBodyClick === true) {
      $('html').on('click touch', function (e) {
        if (!$('.contextualMenu__container').is(e.target) && $('.contextualMenu__container').has(e.target).length === 0 && !$('.contextualMenu__toggle').is(e.target) && $('.contextualMenu__toggle').has(e.target).length === 0) {
          $('html').removeClass('contextualMenu--active');
        }
      });
    }
    $('html').addClass('contextualMenu--' + position);
    $('body').append('<div class="contextualMenu__container"><div class="contextualMenu__head"></div><div class="contextualMenu__alert"><div class="contextualMenu__alert-content"><span class="contextualMenu__icon-up" aria-hidden="true"></span><span class="contextualMenu__icon-up" aria-hidden="true"></span><span class="contextualMenu__icon-up" aria-hidden="true"></span></div></div></div>');


    $('.contextualMenu__header').clone().appendTo('.contextualMenu__head');
    $('.contextualMenu').find('ul').clone().addClass('contextualMenu__panel').appendTo('.contextualMenu__container').find('ul').remove();
    $('.contextualMenu__panel').each(function () {
      $(this).wrap('<div></div>');
      $(this).parent().addClass($(this).attr('class')).attr('data-ma5order', $(this).attr('data-ma5order'));
      $(this).removeAttr('class').removeAttr('data-ma5order');
    });
    if ($(menuFooter).length > 0) {
      $('.contextualMenu__panel').append('<div class="contextualMenu__footer js-append">' + $(menuFooter).html() + '</div>');
    }
    $('.contextualMenu__toggle').on('click touch', function () {
      $('html').addClass('contextualMenu--ready').toggleClass('contextualMenu--active').addClass('contextualMenu--overflow');
      $('.contextualMenu__panel').removeClass('contextualMenu__panel--active-leave contextualMenu__panel--parent-leave contextualMenu__panel--active-enter contextualMenu__panel--parent-enter');
      setTimeout(function () {
        contextualMenuCheckScroll();
      }, 500);
    });
    $('.contextualMenu__btn--enter').on('click touch', function () {
      $('.contextualMenu__panel').removeClass('contextualMenu__panel--active');
      $('.contextualMenu__panel li').removeClass('contextualMenu__li--current');
      var itemPath = $(this).parent().attr('data-ma5order').replace("li", "ul");
      var itemParent = $(this).parent().attr('data-ma5order').replace("li", "ul").split('-');
      var spliced = itemParent.splice(-1, 1);
      itemParent = itemParent.join("-");
      $('.contextualMenu__panel').removeClass('contextualMenu__panel--active-leave contextualMenu__panel--parent-leave contextualMenu__panel--active-enter contextualMenu__panel--parent-enter');
      $('[data-ma5order="' + itemParent + '"]').addClass('contextualMenu__panel--parent-enter');
      $('[data-ma5order="' + itemPath + '"]').addClass('contextualMenu__panel--active-enter contextualMenu__panel--active');
      setTimeout(function () {
        contextualMenuCheckScroll();
      }, 500);
    });
    $('.contextualMenu__leave').on('click touch', function () {
      $('.contextualMenu__panel').removeClass('contextualMenu__panel--active');
      var itemParent = $(this).parent().attr('data-ma5order').replace("li", "ul").split('-');
      var splicedParent = itemParent.splice(-1, 1);
      splicedParent = itemParent.splice(-1, 1);
      itemParent = itemParent.join("-");
      var itemPath = $(this).parent().attr('data-ma5order').replace("li", "ul").split('-');
      var spliced = itemPath.splice(-1, 1);
      itemPath = itemPath.join("-");
      $('.contextualMenu__panel').removeClass('contextualMenu__panel--active-leave contextualMenu__panel--parent-leave contextualMenu__panel--active-enter contextualMenu__panel--parent-enter');
      $('[data-ma5order="' + itemParent + '"]').addClass('contextualMenu__panel--parent-leave contextualMenu__panel--active');
      $('[data-ma5order="' + itemPath + '"]').addClass('contextualMenu__panel--active-leave');
      setTimeout(function () {
        contextualMenuCheckScroll();
      }, 500);
    });
    var didResize = false;
    $(window).on('resize', function () {
      didResize = true;
    });
    setInterval(function () {
      if (didResize) {
        didResize = false;
        contextualMenuCheckScroll();
      }
    }, 300);
  }
}

// scroll menu content alert
function contextualMenuCheckScroll() {
  $('html').removeClass('contextualMenu--overflow');
  $('.contextualMenu__container').removeClass('contextualMenu__container--scroll');
  if ($('.contextualMenu__panel.contextualMenu__panel--active').detectElementScrollbar()) {
    $('.contextualMenu__container').addClass('contextualMenu__container--scroll');
    $('.contextualMenu__panel.contextualMenu__panel--active').bind('scroll', function () {
      if (($(this).scrollTop() + $(this).innerHeight() + 1) >= $(this)[0].scrollHeight) {
        $('.contextualMenu__container').removeClass('contextualMenu__container--scroll');
      } else {
        $('.contextualMenu__container').addClass('contextualMenu__container--scroll');
      }
    });
  } else {
    $('.contextualMenu__panel.contextualMenu__panel--active').unbind("scroll");
  }
}

// builder functions
function contextualMenuBuilder_clearAttributes(menu, activeClass) {
  var whitelist = ["src", "alt", "href"];
  var menuChildrens = $(menu).find('*');
  var menuRoot = $(menu);
  $(menuRoot).each(function () {
    var attributes = this.attributes;
    var i = attributes.length;
    while (i--) {
      var attr = attributes[i];
      if ($.inArray(attr.name, whitelist) === -1) {
        this.removeAttributeNode(attr);
      }
    }
  });
  $(menuChildrens).each(function () {
    var isException = $(this).is('.' + activeClass);
    var attributes = this.attributes;
    var i = attributes.length;
    while (i--) {
      var attr = attributes[i];
      if ($.inArray(attr.name, whitelist) === -1) {
        this.removeAttributeNode(attr);
      }
    }
    if (isException) {
      $(this).addClass(activeClass);
    }
  });
}

function contextualMenuBuilder_clearHTML(menu) {
  var list = $(menu).find('ul');
  list.each(function () {
    $(this).unwrapUntil("li");
  });
  var link = $(menu).find('a');
  link.each(function () {
    $(this).unwrapUntil("li");
    link.find('> b, > strong, > span, > div, > i').replaceWith(function () {
      return $(this).contents();
    });
  });
  var images = $(menu).find('a > img');
  images.each(function () {
    if ($(this).parent().attr('title') !== undefined) {
      var title = $(this).parent().attr('title');
      $(this).parent().append(title).find('img').remove();
    } else {
      var alt = $(this).attr('alt');
      $(this).parent().append(alt).find('img').remove();
    }
  });
  $(menu).find('div:not([attr_all])').remove();
}

function contextualMenuBuilder_buildActive(menu, activeClass) {
  var active = $(menu).find('.' + activeClass);
  if (active.length === 0) {
    $(menu).attr('data-ma5order', 'ma5-ul').addClass('contextualMenu__panel--active');
  } else {
    $(menu).attr('data-ma5order', 'ma5-ul').removeClass('contextualMenu__panel--active');
    var lvl = active.parentsUntil('#js-contextualMenu').length;
    active.each(function () {
      var thisParent = $(this).parent();
      if (this.tagName === 'A') {
        $(this).parent().addClass('contextualMenu__li--current').parent().addClass('contextualMenu__panel--active');
        $(this).addClass('contextualMenu__path');
        while (lvl--) {
          thisParent = thisParent.parent().parent();
          thisParent.find('> a').addClass('contextualMenu__path');
        }
      }
      if (this.tagName === 'LI') {
        $(this).addClass('contextualMenu__li--current').parent().addClass('contextualMenu__panel--active');
        $(this).find('> a').addClass('contextualMenu__path');
        while (lvl--) {
          thisParent = thisParent.parent();
          thisParent.find('> a').addClass('contextualMenu__path');
        }
      }
    });
  }
  $('#js-contextualMenu').find('.' + activeClass).removeClass(activeClass);
}

function contextualMenuBuilder_buildLevels(parent, level, order) {
  parent.addClass('lvl-' + level);
  var orderLi = order.replace('ul', 'li');
  var children = parent.children('li');
  children.attr('data-ma5order', function (i) {
    return orderLi + '-' + (i + 1);
  });
  children.each(function () {
    var n = 0;
    var thisOrder = $(this).attr('data-ma5order').replace('li', 'ul');
    $(this).find('> ul').attr('data-ma5order', thisOrder);
    var sublist = $(this).children('ul');
    if (sublist.length > 0) {
      var thisText = $(this).find('> a').text();
      $(this).find('> ul > li:first-child').prepend('<div class="contextualMenu__leave"><span class="contextualMenu__btn--leave"></span>' + thisText + '</div>');
      $('<span class="contextualMenu__btn--enter"></span>').insertBefore($(this).find('> a'));
      var orderBuild = $(this).attr('data-ma5order');
      contextualMenuBuilder_buildLevels(sublist, level + 1, orderBuild);
    }
  });
}

// ADDITIONAL FUNCTIONS

// https://github.com/jamesallardice/jquery.unwrapuntil
(function ($) {
  $.fn.unwrapUntil = function () {
    var arg = arguments[0],
      type = typeof arguments[0];
    if (type === "number") {
      $.each(this, function () {
        var $this = $(this);
        for (var i = 0; i < arg; i++) {
          $this.unwrap();
        }
      });
    } else if (type === "string") {
      $.each(this, function () {
        var $this = $(this);
        if ($this.closest(arg).length > 0) {
          while ($this.parent(arg).length === 0) {
            $this.unwrap();
          }
        }
      });
    } else if (type === "object") {
      $.each(this, function () {
        var $this = $(this);
        if ($this.closest(arg).length > 0) {
          while ($this.parent()[0] !== arg[0]) {
            $this.unwrap();
          }
        }
      });
    }
    return this;
  };
})(jQuery);
//

// detect IE
var htmlRootForDetectBrowser = document.getElementsByTagName('html')[0];

function isIE() {
  return ((navigator.appName == 'Microsoft Internet Explorer') || ((navigator.appName == 'Netscape') && (new RegExp("Trident/.*rv:([0-9]{1,}[\.0-9]{0,})").exec(navigator.userAgent) !== null)));
}

if (isIE()) {
  htmlRootForDetectBrowser.className += " ie";
} else {
  htmlRootForDetectBrowser.className += " noie";
}
//

// detect Safari
function detectSafari() {
  var ua = navigator.userAgent.toLowerCase();
  if (ua.indexOf('safari') != -1) {
    if (ua.indexOf('chrome') > -1) {
      return false;
    } else {
      return true;
    }
  }

}

if (detectSafari()) {
  htmlRootForDetectBrowser.className += " safari";
}
//

// ESC close
$(document).ready(function () {
  $("body").keydown(function (e) {
    if (e.keyCode == 27) {
      $('html').removeClass('contextualMenu--active');
    }
  });
});
//

// detect-element-scrollbar module
function detectElementScrollbar() {
  $('[data-detect-scrollbar]').each(function () {
    if ($(this).get(0).scrollHeight > $(this).get(0).clientHeight) {
      $(this).addClass('has-scrollbar').removeClass('hasnt-scrollbar');
    } else {
      $(this).addClass('hasnt-scrollbar').removeClass('has-scrollbar');
    }
  });
}

$.fn.detectElementScrollbar = function () {
  if ($(this).get(0).scrollHeight > $(this).get(0).clientHeight) {
    $(this).addClass('has-scrollbar').removeClass('hasnt-scrollbar');
    return true;
  } else {
    $(this).addClass('hasnt-scrollbar').removeClass('has-scrollbar');
    return false;
  }
};
$(document).ready(function () {
  detectElementScrollbar();
});
$(window).on('resize', function () {
  detectElementScrollbar();
});
$(window).on('load', function () {
  detectElementScrollbar();
});
//

// detect-body-scrollbar
$(window).on('load', function () {
  if ($('body').outerHeight() > $(window).height()) {
    $('html').addClass('has-body-scrollbar');
  } else {
    $('html').addClass('hasnt-body-scrollbar');
  }
});
//
